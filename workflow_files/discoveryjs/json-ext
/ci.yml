name: Build

on:
    push:
    pull_request:

env:
    PRIMARY_NODEJS_VERSION: 20
    REPORTER: "min"

jobs:
    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Setup node ${{ env.PRIMARY_NODEJS_VERSION }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ env.PRIMARY_NODEJS_VERSION }}
                cache: "npm"
            - run: npm ci
            - run: npm run lint

    coverage:
        name: Collect coverage
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node_version:
                    - 14.17
                    - 18.0
                    - 20
        steps:
            - uses: actions/checkout@v4
            - name: Setup node ${{ matrix.node_version }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ matrix.node_version }}
                cache: 'npm'
            - run: npm i # old versions of npm doesn't support lockfile v3
              if: ${{ matrix.node_version < '15' }}
            - run: npm ci
            - run: npm run coverage
            - name: Coveralls Parallel
              uses: coverallsapp/github-action@1.1.3
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                flag-name: node-${{ matrix.node_version }}
                parallel: true

    send-to-coveralls:
        name: Send coverage to Coveralls
        needs: coverage
        runs-on: ubuntu-latest
        steps:
            - name: Send coverage to Coveralls
              uses: coverallsapp/github-action@v2
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                parallel-finished: true

    test-bundle:
        name: Test bundle
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Setup node ${{ env.PRIMARY_NODEJS_VERSION }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ env.PRIMARY_NODEJS_VERSION }}
                cache: "npm"
            - run: npm ci
            - run: npm run bundle-and-test

    e2e-tests:
        name: E2E tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Setup node ${{ env.PRIMARY_NODEJS_VERSION }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ env.PRIMARY_NODEJS_VERSION }}
                cache: "npm"
            - run: npm ci
            - run: npm run transpile
            - run: npm run bundle
            - run: npm run test:e2e

    unit-tests:
        name: Unit tests
        runs-on: ubuntu-latest
        strategy:
            matrix:
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
                node_version:
                    - 14.17
                    - 16
                    - 18.0
                    - 18
                    - 20
                    - 22

        steps:
            - uses: actions/checkout@v4
            - name: Setup node ${{ matrix.node_version }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ matrix.node_version }}
                cache: "npm"
            - run: npm i # old versions of npm doesn't support lockfile v3
              if: ${{ matrix.node_version < '15' }}
            - run: npm ci
            - run: npm run transpile
            - run: npm run test
            - run: npm run test:cjs

    test-bun:
        name: Bun test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                bun_version:
                    - 1.1.15

        steps:
            - uses: actions/checkout@v4
            - name: Setup node ${{ env.PRIMARY_NODEJS_VERSION }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ env.PRIMARY_NODEJS_VERSION }}
                cache: "npm"
            - name: Setup Bun ${{ matrix.bun_version }}
              uses: oven-sh/setup-bun@v1
              with:
                bun-version: ${{ matrix.bun_version }}
            - run: npm ci
            - run: npm run transpile
            - run: bun test

    test-deno:
        name: Deno test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                deno_version:
                    - 1.44

        steps:
            - uses: actions/checkout@v4
            - name: Setup node ${{ env.PRIMARY_NODEJS_VERSION }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ env.PRIMARY_NODEJS_VERSION }}
                cache: "npm"
            - name: Setup Deno ${{ matrix.deno_version }}
              uses: denoland/setup-deno@v1
              with:
                deno-version: ${{ matrix.deno_version }}
            - run: npm ci
            - run: deno task test:deno
