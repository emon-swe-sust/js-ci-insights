name: Build and deploy an updated version of Tonc

on:
  push

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Tonc
    runs-on: ubuntu-latest
    steps:
    - name: Checkout tonc (and submodules)
      uses: actions/checkout@v2
      with:
        path: tonc
        submodules: 'true'

    - name: Install mdbook
      uses: peaceiris/actions-mdbook@v1
      with:
        mdbook-version: 0.4.33
    
    - name: Install static-sitemap-cli
      run: npm install static-sitemap-cli

    - name: Cache build dir
      uses: actions/cache@v4
      with:
        path: tonc/target/
        key: ${{ runner.os }}-build-${{ hashFiles('tonc/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Build
      working-directory: tonc/
      env:
        MDBOOK_BUILD__CREATE_MISSING: "false" # Prevent creating missing files in SUMMARY.md
      run: |
        mdbook build
  
    - name: Generate sitemap
      run: |
        cd tonc/output
        npx sscli --no-clean --base https://gbadev.net/tonc

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: tonc/output

  deploy:
    name: Deploy to GitHub pages
    # Do not run this unless *pushing* to `master`.
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
