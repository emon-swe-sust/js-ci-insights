name: Build wheels

on:
  # Uncomment for testing through a PR
  # pull_request:
  #   branches: [develop, releases/**]
  workflow_dispatch:
  release:
    types:
      - published
  push:
    tags:
      - 'v**'

jobs:

  build_wheels_linux_3:
    name: Build wheels for Linux
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU to support non-x86 architectures
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - uses: pypa/cibuildwheel@v2.18
        env:
          CIBW_SKIP: pp* *musllinux*
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le

      - uses: actions/upload-artifact@v4
        with:
          name: hatchet_build_artifacts_wheels_linux_3
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Get PyPA build
        run: python -m pip install build

      - name: Build sdist
        run: python -m build -s

      - uses: actions/upload-artifact@v4
        with:
          name: hatchet_build_artifacts_sdist
          path: dist/*.tar.gz

  test_upload_to_pypi:
    needs:
      - build_wheels_linux_3
        # - build_wheels_macos_36_37
        # - build_wheels_macos_38_plus
      - build_sdist
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: hatchet_build_artifacts_*
          merge-multiple: true
          path: dist
          
      - name: Check build artifacts
        run: |
          ls -lah dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          attestations: false
          verbose: true

  upload_to_pypi:
    needs:
      - build_wheels_linux_3
        # - build_wheels_macos_36_37
        # - build_wheels_macos_38_plus
      - build_sdist
    runs-on: ubuntu-22.04
    if: (github.event_name == 'release' && github.event.action == 'published') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: hatchet_build_artifacts_*
          merge-multiple: true
          path: dist
          
      - name: Check build artifacts
        run: |
          ls -lah dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          attestations: false
          verbose: true
