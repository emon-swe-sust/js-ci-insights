name: 'GSIサーバーへのデプロイ'

on:
  push:
    branches: [ gh-pages ]
    paths-ignore:
      - '.git/**'
      - '.github/**'
      - '*.md'
      - 'LICENSE*'
      - '.gitignore'
      - 'package.json'
      - 'package-lock.json'
      - '.editorconfig'
      - '.env'
      - '.gitattributes'
      - '*.yml'
      - '*.yaml'
      - 'image/print/title.png'
jobs:
  deploy:
    permissions:
      id-token: write
      contents: read
    if: github.repository == 'gsimaps-cicd/gsimaps-internal'
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.deploy-files.outputs.has_changes }}
      paths: ${{ steps.deploy-files.outputs.paths }}
    env:
      DEPLOY_ROLE_ARN: ${{ secrets.GSIMAPS_DEPLOY_ROLE_ARN }}
      S3_DEPLOY_BUCKET_NAME: ${{ secrets.S3_DEPLOY_BUCKET_NAME }}
      CLOUDFRONT_DISTRIBUTION_ID: "E22UPU54MR7TDG"

    steps:
      - uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0
      - name: HTMLファイルの内容を修正
        run: |
          # index.htmlの修正
          sed -i '6a\ <link rel="apple-touch-icon" href="apple-touch-icon.png" />' index.html
          sed -i 's/<title>.*<\/title>/<title>地理院地図 \/ GSI Maps | 国土地理院<\/title>/' index.html
          sed -i -z 's/<script type="text\/javascript">\s*GSI\.GLOBALS\.isCreditShow = true;\s*<\/script>//g' index.html
          sed -i 's/<div id="title_logo_upper">.*<\/div>/<div id="title_logo_upper">地理院地図<\/div>/' index.html
          sed -i 's/<div id="title_logo_lower">.*<\/div>/<div id="title_logo_lower">（電子国土WEB）<\/div>/' index.html

          # index_m.html の修正
          sed -i 's/<title>.*<\/title>/<title>地理院地図 \/ GSI Maps\｜国土地理院<\/title>/' index_m.html
          sed -i -z 's/<script type="text\/javascript">\s*GSI\.GLOBALS\.isCreditShow = true;\s*<\/script>//g' index_m.html
          sed -i -z 's/<div class="logoarea">\s*<\/div>/<div class="logoarea"><a style="text-decoration:none;" href=""><img class="logoimage" src="image\/m_logo.jpg"><\/a><\/div>/' index_m.html

          # index_3d.html の修正
          sed -i 's/<title>.*<\/title>/<title>地理院地図3D<\/title>/' index_3d.html

          # globe/index_globe.html の修正
          sed -i 's/<title>.*<\/title>/<title>地理院地図Globe<\/title>/' globe/index_globe.html
          sed -i 's/<div id="title_logo_upper">.*<\/div>/<div id="title_logo_upper">地理院地図<\/div>/' globe/index_globe.html
          sed -i 's/<div id="title_logo_lower">.*<\/div>/<div id="title_logo_lower">Globe<\/div>/' globe/index_globe.html

      - uses: aws-actions/configure-aws-credentials@v4
        if: ${{ env.DEPLOY_ROLE_ARN != '' }}
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ env.DEPLOY_ROLE_ARN }}
      - name: 変更ファイルの特定とS3デプロイ
        id: deploy-files
        run: |
          # 変更があったファイルをフィルタリングして直接デプロイ
          declare -a quoted_paths=()
          while read -r file; do
            if [ -f "$file" ]; then
              # 除外ファイルの特定
              if [[ "$file" == .git/* || "$file" == .github/* || "$file" == *.md || 
                    "$file" == LICENSE* || "$file" == .gitignore || "$file" == package.json || 
                    "$file" == package-lock.json || "$file" == .editorconfig || "$file" == .env || 
                    "$file" == .gitattributes || "$file" == *.yml || "$file" == *.yaml || 
                    "$file" == image/print/title.png ]]; then
                echo "除外対象のファイルを除外しました"
              else
                # S3にアップロード
                aws s3 cp "$file" "s3://${S3_DEPLOY_BUCKET_NAME}/$file"
                quoted_paths+=("\"/$file\"")
                echo "デプロイ: $file"
              fi
            else
              echo "変更があったファイルが存在しないのでスキップします"
            fi
          done < <(git diff --diff-filter=AM --name-only ${{ github.event.before }} ${{ github.sha }})
          # デプロイしたファイルがあるかどうかを出力
          if [ ${#quoted_paths[@]} -gt 0 ]; then
            # 配列要素をスペース区切りで連結
            paths_string="${quoted_paths[*]}"
            echo "変更されたパス: $paths_string"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "paths=$paths_string" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "アップロードされたファイルがないため、キャッシュ無効化はスキップします"
          fi

  invalidate-cache:
    needs: deploy
    permissions:
      id-token: write
      contents: read
    if: needs.deploy.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    env:
      DEPLOY_ROLE_ARN: ${{ secrets.GSIMAPS_DEPLOY_ROLE_ARN }}
      CLOUDFRONT_DISTRIBUTION_ID: "E22UPU54MR7TDG"
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ env.DEPLOY_ROLE_ARN }}
      - name: CloudFrontキャッシュ無効化
        run: |
          # CloudFrontキャッシュ無効化の実行
          aws cloudfront create-invalidation \
            --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} \
            --paths ${{ needs.deploy.outputs.paths }}
          echo "キャッシュ無効化を実行しました"
