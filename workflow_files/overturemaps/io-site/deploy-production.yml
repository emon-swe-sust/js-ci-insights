# This workflow will do a clean install of node dependencies and deploy to AWS.

name: Production Deployment

on:
  push:
    branches: [ main ]

permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      ariabaseurl: ${{ steps.vars.outputs.ariabaseurl }}
      distdir: ${{ steps.vars.outputs.distdir }}

    steps:
    - name: Checkout 📥
      uses: actions/checkout@v4

    - name: Setup vars 📋
      id: vars
      run: |
        echo "ariabaseurl=/aria/$(git rev-parse --short ${{ github.sha }})-20.x-dist" >> $GITHUB_OUTPUT
        echo "distdir=$(git rev-parse --short ${{ github.sha }})-20.x-dist" >> $GITHUB_OUTPUT

    - name: Use Node.js 20.12.0 ⚙️
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install 🎯
      run: cd site; npm install

    - name: Build 🏃
      run: cd site; npm run build
      env:
        BASE_ARIA_URL: ${{ steps.vars.outputs.ariabaseurl }}
    - name: Upload artifacts 📤
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: site/dist
        if-no-files-found: error

  deploy:
    name: Deploy to Cloudfront
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: preview
      url:  https://d13285jxgcxetl.cloudfront.net/aria/${{ needs.build.outputs.distdir }}/index.html

    steps:
    - name: Checkout 📥
      uses: actions/checkout@v4

    - name: Download artifacts 📥
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: site/dist

    - name: Configure AWS credentials 🔐
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::851725248912:role/aria-cicd-role
        role-duration-seconds: 900 # the ttl of the session, in seconds.
        aws-region: us-west-2

    - name: Copy new index file to S3 📤
      run: aws s3 cp site/dist/index.html s3://aria-site/index.html --no-progress
      env:
        DISTDIR: ${{ needs.build.outputs.distdir }}

    - name: Copy new dist dir to S3 📤
      run: aws s3 cp site/dist s3://aria-site/aria/$DISTDIR --recursive --no-progress
      env:
        DISTDIR: ${{ needs.build.outputs.distdir }}

    - name: Invalidate Cloudfront cache 📤
      run: aws cloudfront create-invalidation --distribution-id E3GBPWSHZI8N0 --paths /index.html
