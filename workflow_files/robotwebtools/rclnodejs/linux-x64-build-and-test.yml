name: Build and Test (Reusable)

on:
  workflow_call:
    inputs:
      trigger_type:
        description: 'Type of trigger (pr or push)'
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.docker_image }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [22.X, 24.X]
        architecture: [x64]
        ros_distribution:
          - humble
          - jazzy
          - kilted
          - rolling
        include:
          # Humble Hawksbill (May 2022 - May 2027)
          - docker_image: ubuntu:jammy
            ros_distribution: humble
          # Jazzy Jalisco (May 2024 - May 2029)
          - docker_image: ubuntu:noble
            ros_distribution: jazzy
          # Kilted Kaiju (May 2025 - Dec 2026)
          - docker_image: ubuntu:noble
            ros_distribution: kilted
          # Rolling Ridley (No End-Of-Life)
          - docker_image: ubuntu:noble
            ros_distribution: rolling
    steps:
    - name: Setup Node.js ${{ matrix.node-version }} on ${{ matrix.architecture }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        architecture: ${{ matrix.architecture }}

    - name: Setup ROS2
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: ${{ matrix.ros_distribution }}

    - name: Install test-msgs on Linux
      run: |
        sudo apt install ros-${{ matrix.ros_distribution }}-test-msgs

    - uses: actions/checkout@v5

    - name: Build and test rclnodejs
      run: |
        uname -a
        source /opt/ros/${{ matrix.ros_distribution }}/setup.bash
        npm i
        npm run lint
        npm test
        npm run clean

    - name: Test with IDL ROS messages against rolling
      if: ${{ matrix.ros_distribution == 'rolling' }}
      run: |
        source /opt/ros/${{ matrix.ros_distribution }}/setup.bash
        npm i
        npm run test-idl
        npm run clean

    - name: Coveralls Parallel
      if: ${{ matrix.ros_distribution == 'rolling' && matrix['node-version'] == '24.X' }}
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-${{ inputs.trigger_type }}-${{ matrix.node-version }}-${{ matrix.architecture }}
        parallel: true

  finish:
      needs: build
      if: always()
      runs-on: ubuntu-latest
      steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
