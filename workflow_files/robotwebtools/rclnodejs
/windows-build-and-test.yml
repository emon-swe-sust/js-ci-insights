name: Windows Build and Test (Reusable)

on:
  workflow_call:
    inputs:
      trigger_type:
        description: 'Type of trigger (pr or push)'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-2025
    strategy:
      fail-fast: false
      matrix:
        node-version: [22.X]
        ros_distribution:
          - humble
          - jazzy
          - kilted
          - rolling
    steps:
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup ROS2
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: ${{ matrix.ros_distribution }}

    - name: Install ROS2 Rolling (Conditional)
      if: ${{ matrix.ros_distribution == 'rolling' }}
      shell: bash
      run: |
        wget --quiet https://ci.ros2.org/view/packaging/job/packaging_windows/lastSuccessfulBuild/artifact/ws/ros2-package-windows-AMD64.zip -O rolling.zip
        7z x rolling.zip -y -o/c/dev/rolling

    - name: Prebuild - Setup VS Dev Environment
      uses: seanmiddleditch/gha-setup-vsdevenv@v4

    - uses: actions/checkout@v5

    - name: Build rclnodejs
      shell: cmd
      run: |
        set RMW_IMPLEMENTATION=rmw_fastrtps_cpp
        call "c:\dev\${{ matrix.ros_distribution }}\ros2-windows\setup.bat"
        npm i

    # On the windows/foxy combination the Eclipse CycloneDDS RMW implementation is used to workaround
    # an error when loading the default fastrtps ddl
    - name: Test rclnodejs
      shell: cmd
      run: |
        set RMW_IMPLEMENTATION=rmw_fastrtps_cpp
        call "c:\dev\${{ matrix.ros_distribution }}\ros2-windows\setup.bat"
