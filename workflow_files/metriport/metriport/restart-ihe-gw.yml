name: Restart IHE GW

on:
  workflow_dispatch:
    inputs:
      server:
        type: choice
        description: Inbound server
        options:
          - inbound
        required: true
      env_type:
        type: choice
        description: Which env to restart?
        options:
          - staging
          - production
        required: true

env:
  ECR_REPO_URI: ${{ inputs.env_type == 'production' && vars.IHE_ECR_REPO_URI_PRODUCTION || vars.IHE_ECR_REPO_URI_STAGING }}
  ECS_CLUSTER: ${{ inputs.env_type == 'production' && vars.IHE_ECS_CLUSTER_PRODUCTION || vars.IHE_ECS_CLUSTER_STAGING }}
  ECS_SERVICE_INBOUND: ${{ inputs.env_type == 'production' && vars.IHE_INBOUND_ECS_SERVICE_PRODUCTION || vars.IHE_INBOUND_ECS_SERVICE_STAGING }}

jobs:
  prepare-env:
    runs-on: ubuntu-latest
    steps:
      - run: echo "null"
    outputs:
      ecrRepoUri: ${{ env.ECR_REPO_URI }}
      ecsCluster: ${{ env.ECS_CLUSTER }}
      ecsServiceInbound: ${{ env.ECS_SERVICE_INBOUND }}

  restart-inbound:
    if: ${{ inputs.server == 'inbound' }}
    needs: prepare-env
    uses: ./.github/workflows/_restart-ecs.yml
    with:
      ECR_REPO_URI: ${{ needs.prepare-env.outputs.ecrRepoUri }}
      ECS_CLUSTER: ${{ needs.prepare-env.outputs.ecsCluster }}
      ECS_SERVICE: ${{ needs.prepare-env.outputs.ecsServiceInbound }}
      AWS_REGION: ${{ vars.IHE_REGION_STAGING }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
