name: E2E tests

on:
  workflow_dispatch:
  pull_request:
    types: [opened, ready_for_review]
  pull_request_review:
    types: [submitted]

jobs:
  Build-Extension:
    if: github.event.review &&
      (
      github.event.review.state == 'approved' ||
      contains(github.event.review.body, '/check') ||
      contains(github.event.review.body, '/ext-general') ||
      contains(github.event.review.body, '/dapp-general') ||
      contains(github.event.review.body, '/trezor') ||
      contains(github.event.review.body, '/ledger')
      )
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Read .nvmrc
        id: nvm
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v4
        id: node-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ steps.nvm.outputs.NVMRC }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ steps.nvm.outputs.NVMRC }}-modules-
            ${{ runner.os }}-node-modules-

      - name: Install packages
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: |
          . install-all.sh

      - name: Build the test mainnet version
        working-directory: ./packages/yoroi-extension
        run: npm run test:build

      - name: Check if the app is built correctly
        working-directory: ./packages/yoroi-extension/build/js
        run: |
          if [ ! -f inject.js ]; then
            echo "Build failed: files not found"
            exit 1
          fi

      - name: Archive built app
        uses: actions/upload-artifact@v4
        with:
          name: builtApp
          path: |
            ./packages/yoroi-extension/Yoroi-test.crx
            ./packages/yoroi-extension/Yoroi.xpi
          retention-days: 1
          overwrite: true

  Ext-General:
    if: github.event.review &&
      (
      github.event.review.state == 'approved' ||
      contains(github.event.review.body, '/check') ||
      contains(github.event.review.body, '/ext-general')
      )
    runs-on: ubuntu-latest
    needs: [Build-Extension]

    steps:
      - uses: browser-actions/setup-chrome@v2
        id: setup-chrome
        with:
          chrome-version: 'stable'

      - uses: actions/checkout@v4

      - name: Read .nvmrc
        id: nvm
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
          cache: 'npm'

      - name: Cache e2e-tests node modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            packages/e2e-tests/node_modules
            ~/.npm
          key: ${{ runner.os }}-e2e-tests-node-${{ steps.nvm.outputs.NVMRC }}-${{ steps.setup-chrome.outputs.chrome-version }}-${{ hashFiles('packages/e2e-tests/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-e2e-tests-node-${{ steps.nvm.outputs.NVMRC }}-
            ${{ runner.os }}-e2e-tests-node-

      - name: Install packages
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        working-directory: ./packages/e2e-tests
        run: npm install

      - name: Download app
        uses: actions/download-artifact@v4
        with:
          name: builtApp
          path: ./packages/yoroi-extension

      - name: Run tests
        working-directory: ./packages/e2e-tests
        env:
          CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
          FIRST_SMOKE_TEST_WALLET: ${{ secrets.FIRST_SMOKE_TEST_WALLET }}
          TEST_WALLET_MAINNET_1: ${{ secrets.TEST_WALLET_MAINNET_1 }}
          SECOND_STATIC_TEST_WALLET: ${{ secrets.SECOND_STATIC_TEST_WALLET }}
          SECOND_SMOKE_TEST_WALLET: ${{ secrets.SECOND_SMOKE_TEST_WALLET }}
          SECOND_SMOKE_TEST_WALLET_FF: ${{ secrets.SECOND_SMOKE_TEST_WALLET_FF }}
        run: npm run test:chrome

      - name: Archive tests screenshots and logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: testRunsData_E2E_tests_extension_chrome
          path: |
            ./packages/e2e-tests/mochawesome-report
            ./packages/e2e-tests/testRunsData_chrome

  DApp-General:
    if: github.event.review &&
      (
      github.event.review.state == 'approved' ||
      contains(github.event.review.body, '/check') ||
      contains(github.event.review.body, '/dapp-general')
      )
    runs-on: ubuntu-latest
    needs: [Build-Extension]

    steps:
      - uses: browser-actions/setup-chrome@v2
        id: setup-chrome
        with:
          chrome-version: 'stable'

      - uses: actions/checkout@v4

      - name: Read .nvmrc
        id: nvm
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
          cache: 'npm'

      - name: Cache e2e-tests node modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            packages/e2e-tests/node_modules
            ~/.npm
          key: ${{ runner.os }}-e2e-tests-node-${{ steps.nvm.outputs.NVMRC }}-${{ steps.setup-chrome.outputs.chrome-version }}-${{ hashFiles('packages/e2e-tests/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-e2e-tests-node-${{ steps.nvm.outputs.NVMRC }}-
            ${{ runner.os }}-e2e-tests-node-

      - name: Install packages
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        working-directory: ./packages/e2e-tests
        run: npm install

      - name: Download app
        uses: actions/download-artifact@v4
        with:
          name: builtApp
          path: ./packages/yoroi-extension

      - name: Run tests
        working-directory: ./packages/e2e-tests
        env:
          CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
          FIRST_SMOKE_TEST_WALLET: ${{ secrets.FIRST_SMOKE_TEST_WALLET }}
          TEST_WALLET_MAINNET_1: ${{ secrets.TEST_WALLET_MAINNET_1 }}
          SECOND_STATIC_TEST_WALLET: ${{ secrets.SECOND_STATIC_TEST_WALLET }}
          SECOND_SMOKE_TEST_WALLET: ${{ secrets.SECOND_SMOKE_TEST_WALLET }}
          SECOND_SMOKE_TEST_WALLET_FF: ${{ secrets.SECOND_SMOKE_TEST_WALLET_FF }}
        run: xvfb-run -a -e /dev/stdout -s "-screen 0 1600x900x24" npm run test:chrome:dapp

      - name: Archive tests screenshots and logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: testRunsData_E2E_tests_dapp_chrome
          path: |
            ./packages/e2e-tests/mochawesome-report
            ./packages/e2e-tests/testRunsData_chrome

  # Trezor:
  #   if: github.event.review &&
  #     (
  #     github.event.review.state == 'approved' ||
  #     contains(github.event.review.body, '/check') ||
  #     contains(github.event.review.body, '/trezor')
  #     )
  #   runs-on: ubuntu-latest
  #   needs: [Build-Extension]

  #   steps:
  #     - name: Cache Trezor user env
  #       id: cache-trezor-env
  #       uses: actions/cache@v4
  #       with:
  #         path: ../trezor-user-env
  #         key: ${{ runner.os }}-trezor-user-env-${{ github.run_id }}
  #         restore-keys: |
  #           ${{ runner.os }}-trezor-user-env-

  #     - name: Clone or update trezor-user-env
  #       run: |
  #         if [ -d "../trezor-user-env" ]; then
  #           cd ../trezor-user-env
  #           git fetch --depth 1 origin main
  #           git reset --hard origin/main
  #         else
  #           cd ..
  #           git clone --depth 1 https://github.com/trezor/trezor-user-env.git
  #         fi

  #     - name: Download firmware
  #       working-directory: ../trezor-user-env/src/binaries/firmware/bin/
  #       run: sudo ./download.sh

  #     - name: Copy firmware for docker volume
  #       working-directory: ../trezor-user-env
  #       run: |
  #         mkdir dockerVolumeFirmware
  #         cp ./src/binaries/firmware/bin/* dockerVolumeFirmware

  #     - name: Copy trezor-go for docker volume
  #       working-directory: ../trezor-user-env
  #       run: |
  #         mkdir dockerVolumeTrezorGo
  #         cp ./src/binaries/trezord-go/bin/* dockerVolumeTrezorGo

  #     - name: Create the logs folder in the root of the trezor-user-env
  #       working-directory: ../trezor-user-env
  #       run: mkdir logs

  #     - name: Run the trezor user environment
  #       working-directory: ../trezor-user-env
  #       run: sudo docker run -p 9001:9001 -p 9002:9002 -p 21326:21326 -p 127.0.0.1:21325:21326 -p 21324:21324 -v logs:/trezor-user-env/logs/ -v dockerVolumeFirmware:/trezor-user-env/src/binaries/firmware/bin/ -v dockerVolumeTrezorGo:/trezor-user-env/src/binaries/trezord-go/bin -d ghcr.io/trezor/trezor-user-env:latest

  #     - uses: browser-actions/setup-chrome@v2
  #       id: setup-chrome
  #       with:
  #         chrome-version: 'stable'

  #     - uses: actions/checkout@v4

  #     - name: Read .nvmrc
  #       id: nvm
  #       run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT

  #     - name: Setup node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '${{ steps.nvm.outputs.NVMRC }}'
  #         cache: 'npm'

  #     - name: Cache e2e-tests node modules
  #       uses: actions/cache@v4
  #       id: node-modules-cache
  #       with:
  #         path: |
  #           packages/e2e-tests/node_modules
  #           ~/.npm
  #         key: ${{ runner.os }}-e2e-tests-node-${{ steps.nvm.outputs.NVMRC }}-${{ steps.setup-chrome.outputs.chrome-version }}-${{ hashFiles('packages/e2e-tests/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-e2e-tests-node-${{ steps.nvm.outputs.NVMRC }}-
  #           ${{ runner.os }}-e2e-tests-node-

  #     - name: Install packages
  #       if: steps.node-modules-cache.outputs.cache-hit != 'true'
  #       working-directory: ./packages/e2e-tests
  #       run: npm install

  #     - name: Download app
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: builtApp
  #         path: ./packages/yoroi-extension

  #     - name: Run tests
  #       working-directory: ./packages/e2e-tests
  #       env:
  #         CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
  #       run: xvfb-run -a -e /dev/stdout -s "-screen 0 1600x900x24" npm run test:chrome:trezor

  #     - name: Archive tests screenshots and logs
  #       if: ${{ failure() }}
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: testRunsData_E2E_tests_trezor_chrome
  #         path: |
  #           ./packages/e2e-tests/mochawesome-report
  #           ./packages/e2e-tests/testRunsData_chrome

  Ledger:
    if: github.event.review &&
      (
      github.event.review.state == 'approved' ||
      contains(github.event.review.body, '/check') ||
      contains(github.event.review.body, '/ledger')
      )
    runs-on: ubuntu-latest
    needs: [Build-Extension]
    steps:
      - name: Pull Speculos Docker image
        run: docker pull ghcr.io/ledgerhq/speculos:4d320a7be879fba8d5f29a0c9516e47cb556fed8

      - uses: browser-actions/setup-chrome@v2
        id: setup-chrome
        with:
          chrome-version: 'stable'

      - uses: actions/checkout@v4

      - name: Read .nvmrc
        id: nvm
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
          cache: 'npm'

      - name: Cache e2e-tests node modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            packages/e2e-tests/node_modules
            ~/.npm
          key: ${{ runner.os }}-e2e-tests-node-${{ steps.nvm.outputs.NVMRC }}-${{ steps.setup-chrome.outputs.chrome-version }}-${{ hashFiles('packages/e2e-tests/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-e2e-tests-node-${{ steps.nvm.outputs.NVMRC }}-
            ${{ runner.os }}-e2e-tests-node-

      - name: Install packages
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        working-directory: ./packages/e2e-tests
        run: npm install

      - name: Download app
        uses: actions/download-artifact@v4
        with:
          name: builtApp
          path: ./packages/yoroi-extension

      - name: Run tests
        working-directory: ./packages/e2e-tests
        env:
          CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
        run: xvfb-run -a -e /dev/stdout -s "-screen 0 1600x900x24" npm run test:chrome:ledger

      - name: Archive tests screenshots and logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: testRunsData_E2E_tests_ledger_chrome
          path: |
            ./packages/e2e-tests/mochawesome-report
            ./packages/e2e-tests/testRunsData_chrome
