name: ci - test

on:
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]
  workflow_run:
    workflows: ["CodeQL - Test"]
    types:
      - completed
  # build weekly for fresh base docker image - Now triggered when CodeQL workflow runs on cron
  #schedule:
  #  - cron: '30 4 * * 1'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_build_push:
    name: ci - test, build, push
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: bigthundersr/onstar2mqtt
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=schedule,pattern=weekly

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - run: npm ci
      - run: npm run build --if-present
      - run: npm run lint
      - run: npm test
      - run: npx c8 --reporter=lcov npm test
      - run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report --project-token ${{ secrets.CODACY_PROJECT_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
#      - name: Login to DockerHub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Push to DockerHub
#        uses: docker/build-push-action@v4
#        with:
#          platforms: linux/amd64,linux/arm64,linux/arm/v7
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.docker_meta.outputs.tags }}
#          labels: ${{ steps.docker_meta.outputs.labels }}

