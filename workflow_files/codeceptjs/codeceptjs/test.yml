name: Run Unit tests

on:
  push:
    branches:
      - 3.x
  pull_request:
    branches:
      - '**'

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: true
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
      - run: npm run test:unit

  runner-tests:
    name: Runner tests
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: true
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
      - run: npm run test:runner
        # Note: Runner tests are mocha-based, so sharding doesn't apply here.
        # For CodeceptJS sharding examples, see sharding-demo.yml workflow.
