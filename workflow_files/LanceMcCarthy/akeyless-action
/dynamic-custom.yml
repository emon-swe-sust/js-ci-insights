name: 'Custom Producer Dynamic Secrets'
# Docs => https://docs.akeyless.io/docs/custom-producer
# Custom Producer API source code => https://github.com/LanceMcCarthy/akeyless-web-target/blob/main/src/SecretsMocker/SecretsMocker/Controllers/SyncController.cs

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'src/**/*'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/dynamic-custom.yml'

permissions:
  id-token: write
  contents: read

jobs:
  ########## Option 1 ########## 
  # Default behavior: 
  # The response from Akeyless is kept in it's original JSON string, so it is your responsibility to parse it.
  custom_producer_dynamic_secrets:
    runs-on: ubuntu-latest
    name: Custom producer (default)
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Fetch dynamic secret from Akleyless
      id: fetch-secrets
      uses: ./
      with:
        access-id: ${{secrets.AKEYLESS_ACCESS_ID_PERSONAL}}
        dynamic-secrets: '{"/custom-web-producer":"my_dynamic_secret"}'

    - name: Verify Job Outputs using jq
      run: |
        echo "Your job output secret is ${{steps.fetch-secrets.outputs.my_dynamic_secret}}"
        echo "Manually parsed PASSWORD:" 
        echo '${{steps.fetch-secrets.outputs.my_dynamic_secret}}' | jq '.password'

    - name: Verify Environment Variables using jq
      run: |
        echo "Your environment secret is ${{env.my_dynamic_secret}}"
        echo "Manually parsed PASSWORD:"
        echo '${{env.my_dynamic_secret}}' | jq '.password'

    # Extra 1 & 2 Another way to get the secret values is to use jq and export them to custom env vars directly
    - name: EXTRA (part 1) - Export Secrets to Environment using jq
      run: |
        echo '${{steps.fetch-secrets.outputs.my_dynamic_secret}}' | jq -r 'to_entries|map("AKEYLESS_\(.key)=\(.value|tostring)")|.[]' >> $GITHUB_ENV
    
    - name: EXTRA (part 2) - Verify EXTRA 1's Exported Variables
      run: |
        echo "AKEYLESS_password: ${{env.AKEYLESS_password}}"

  ########## Option 2 ########## 
  # Uses 'parse-dynamic-secrets: true' 
  # This will automatically parse the JSON string into individual outputs
  custom_producer_dynamic_secrets_parsed:
    runs-on: ubuntu-latest
    name: Custom producer (parsed)
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Fetch dynamic secret from Akleyless
      id: fetch-secrets
      uses: ./
      with:
        access-id: ${{secrets.AKEYLESS_ACCESS_ID_PERSONAL}}
        dynamic-secrets: '{"/custom-web-producer":""}' #no prefix, all output fields are dynamically parsed from source
        parse-dynamic-secrets: true

    - name: Verify Job Outputs (to known field names, pre-parsed)
      run: |
        echo "UPDATED_AT: ${{steps.fetch-secrets.outputs.password}}"

    - name: Verify Environment Variables (to known field names, pre-parsed)
      run: |
        echo "PASSWORD: ${{env.password}}"

  ########## Option 3 ##########
  # - Uses 'parse-dynamic-secrets: true'
  # - Uses 'WEB' as a prefix to the output names
  # This is the same as Option 2, but with a known prefix to help avoid conflicts with other variable names
  custom_producer_dynamic_secrets_prefixed:
    runs-on: ubuntu-latest
    name: Custom producer (prefix-parsed)
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Fetch dynamic secret from Akleyless
      id: fetch-secrets
      uses: ./
      with:
        access-id: ${{secrets.AKEYLESS_ACCESS_ID_PERSONAL}}
        dynamic-secrets: '{"/custom-web-producer":"WEB"}' # adds the "WEB_" prefix to dynamically parsed output names
        parse-dynamic-secrets: true

    - name: Verify Job Outputs (to known field names, pre-parsed with prefix)
      run: |
        echo "PASSWORD: ${{steps.fetch-secrets.outputs.WEB_password}}"

    - name: Verify Environment Variables (to known field names, pre-parsed with prefix)
      run: |
        echo "PASSWORD: ${{env.WEB_password}}"
