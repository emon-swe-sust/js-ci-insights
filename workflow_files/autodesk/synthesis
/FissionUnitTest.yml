name: Fission - Unit Test

on:
  workflow_dispatch: {}
  push:
    branches: [prod, dev]
  pull_request:
    branches: [prod, dev]

jobs:
  runUnitTests:
    name: Playwright Unit Tests
    container:
      image: mcr.microsoft.com/playwright:v1.54.2-noble
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "fission"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: JavaScript Setup
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Unzipped Synthesis Assets
        id: cache-assets
        uses: actions/cache@v3
        with:
          path: fission/public/Downloadables
          key: ${{ runner.os }}-assets-${{hashFiles('fission/public/assetpack.zip')}}

      - name: Download Synthesis assetpack if not cached
        if: steps.cache-assets.outputs.cache-hit != 'true'
        run: |
          cd ..
          apt update
          apt install git-lfs unzip
          git config --global --add safe.directory `pwd`
          git lfs pull

          cd fission
          unzip -o public/assetpack.zip -d public/ || echo

      - name: Cache Node Dependencies
        uses: actions/cache@v3
        with:
          key: "${{runner.os}}-npm-fission-${{hashFiles('fission/package.json')}}"
          path: "fission/node_modules"
          restore-keys: |
            ${{runner.os}}-npm-fission-
            ${{runner.os}}-npm

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: HOME=/root npm run test --bail=1

  runAssetpackTests:
    name: Assetpack Tests
    needs: runUnitTests
    container:
      image: mcr.microsoft.com/playwright:v1.54.2-noble
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "fission"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: JavaScript Setup
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Unzipped Synthesis Assets
        id: cache-assets
        uses: actions/cache@v3
        with:
          path: fission/public/Downloadables
          key: ${{ runner.os }}-assets-${{hashFiles('fission/public/assetpack.zip')}}

      - name: Cache Node Dependencies
        uses: actions/cache@v3
        with:
          key: "${{runner.os}}-npm-fission-${{hashFiles('fission/package.json')}}"
          path: "fission/node_modules"
          restore-keys: |
            ${{runner.os}}-npm-fission-
            ${{runner.os}}-npm

      - name: Run Assetpack Tests
        run: HOME=/root npm run test src/test/mirabuf/DefaultAssets.test.ts --bail=1
        env:
          VITE_RUN_ASSETPACK_TEST: true
