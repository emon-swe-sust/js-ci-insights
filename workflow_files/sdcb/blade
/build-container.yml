name: Build Container
on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - name: Login container
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build wwwroot typescript
        run: |
          cd SpinBladeArena/wwwroot
          tsc

      - name: Build container
        run: docker build -f "SpinBladeArena/Dockerfile" . -t blade

      - name: Tag container with 'latest' & date
        run: |
          docker tag blade ${{ secrets.DOCKER_USERNAME }}/blade:latest
          DATE=$(date +'%Y%m%d')
          docker tag blade ${{ secrets.DOCKER_USERNAME }}/blade:$DATE

      # Push both 'latest' and 'date' tags
      - name: Push container
        run: |
          DATE=$(date +'%Y%m%d')
          docker push ${{ secrets.DOCKER_USERNAME }}/blade:$DATE
          docker push ${{ secrets.DOCKER_USERNAME }}/blade:latest
  
  windows-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Compile Program
        run: |
          cd SpinBladeArena/wwwroot
          tsc
          cd ../../
          dotnet publish SpinBladeArena/SpinBladeArena.csproj -c Release -r win-x64 --self-contained true -o ./Publish /p:DeleteExistingFiles=True /p:PublishSingleFile=true /p:PublishReadyToRun=true /p:EnableCompressionInSingleFile=true
          7z a -tzip -mx=1 SpinBladeArena.zip ./Publish/*

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          release_name: Release-${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: SpinBladeArena.zip
          asset_name: SpinBladeArena-${{ github.run_number }}.zip
          asset_content_type: application/octet-stream