name: Deploy Documentation and Release Package

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建和发布包 - 使用现有 docker-compose.yml
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build using docker-compose
        run: |
          # 检查并使用合适的 docker compose 命令
          if command -v docker-compose &> /dev/null; then
            DOCKER_COMPOSE="docker-compose"
          else
            DOCKER_COMPOSE="docker compose"
          fi
          
          # 构建所需的服务
          $DOCKER_COMPOSE build mockm-client mockm-dev
          
          # 构建客户端
          $DOCKER_COMPOSE run --rm mockm-client \
            sh -c "cd client && yarn build"
          
          # 运行测试并生成报告
          $DOCKER_COMPOSE run --rm mockm-dev \
            sh -c "npm run test:dev"

          # 构建生产内容：包、文档、复制测试报告
          $DOCKER_COMPOSE run --rm \
            -e GITHUB_ACTIONS=true \
            mockm-dev \
            sh -c "git config --global --add safe.directory /workspace && npm run build:serve"

      - name: Get package info
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "PACKAGE_NAME=mockm" >> $GITHUB_ENV

      - name: Create Release
        uses: mini-bomba/create-github-release@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: |
            ## Changes in v${{ env.VERSION }}
            
            Auto-generated release from dev branch using existing Docker Compose configuration.
            
            ### Package Info
            - Version: ${{ env.VERSION }}
            - Build Date: ${{ github.event.head_commit.timestamp }}
            - Commit: ${{ github.sha }}
            - Built with: Docker Compose (reusing existing config)
            
            ### Download
            - [mockm-${{ env.VERSION }}.tgz](https://github.com/${{ github.repository }}/releases/download/v${{ env.VERSION }}/mockm-${{ env.VERSION }}.tgz)
          prerelease: false
          draft: false
          files: |
            dist/*.tgz
          clear_attachments: true

      - name: Cleanup Docker resources
        if: always()
        run: |
          # 检查并使用合适的 docker compose 命令
          if command -v docker-compose &> /dev/null; then
            DOCKER_COMPOSE="docker-compose"
          else
            DOCKER_COMPOSE="docker compose"
          fi
          
          $DOCKER_COMPOSE down --volumes --remove-orphans || true
          docker system prune -f || true

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: doc/.vuepress/dist

  # 部署到 GitHub Pages
  deploy-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-release
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
