# run local with act
# Note: the dummy.env file is not optional to prevent act to load the .env file
#       this is super important because if a proxy is set in the .env file,
#       because act will use the proxy and the tests will fail
# act -j test --env-file dummy.env --rm

name: Checks

on:
  pull_request:
    types:
      - labeled
      - opened
      - synchronize
      - reopened

permissions:
  contents: read

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    container:
      image: ruby:3.2

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: "postgres"
          POSTGRES_DB: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check for fork and missing label
        if: |
          github.event.pull_request.head.repo.full_name != github.repository && !contains(github.event.pull_request.labels.*.name, 'save-to-merge')
        run: |
          echo "PR is from a fork and the label 'save-to-merge' is missing, this will not pass üßô‚ùå"
          echo "Message for the Maintainer: Please check the tests and if they are ok, add the label 'save-to-merge' to the PR."
          exit 1
      - name: Setup Javascript (act only)
        # install nodejs only if running locally with act
        # otherwise the actions/setup-node@v4 will fails
        # because it needs a installed nodejs to be able to run
        if: ${{ env.ACT }}
        run: |
          apt-get update
          apt-get install -y nodejs

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Gem cache
        id: cache-bundle
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: vendor/bundle
          key: bundle-${{ hashFiles('**/Gemfile.lock') }}

      - name: Bundle install
        id: bundle-install
        env:
          RAILS_ENV: test
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: Setup DB, Run tests
        id: test-rails
        env:
          POSTGRES_SERVICE_HOST: postgres
          PGUSER: postgres
          PGPORT: 5432
          RAILS_ENV: test
        run: |
          bin/rake db:create db:migrate
          bundle exec rspec

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "20.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@sapcc"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ELEKTRA_GITHUB_NPM_TOKEN }}

      - name: Install yarn
        run: npm install -g yarn

      - name: Get yarn cache dir
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        id: cache-yarn
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install packages and run tests
        # this runs only in PRs from the same repo because of the missing npm token to download the packages
        if: |
          github.event.pull_request.head.repo.full_name == github.repository
        id: test-js
        run: |
          yarn install
          yarn test

      - name: Run typecheck
        # this runs only in PRs from the same repo because of the missing npm token to download the packages
        if: |
          github.event.pull_request.head.repo.full_name == github.repository
        id: typecheck
        run: |
          yarn typecheck

      - name: Run lint in plugins (see script/lint-plugins.js)
        # this runs only in PRs from the same repo because of the missing npm token to
        if: |
          github.event.pull_request.head.repo.full_name == github.repository
        id: lint
        run: |
          yarn lint:plugins
