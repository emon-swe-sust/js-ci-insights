name: Test Builds

on:
  pull_request:
    branches: [main]

jobs:
  # check the esm build
  esm:
    runs-on: ubuntu-latest

    timeout-minutes: 10

    strategy:
      # I want the test to run on all node versions to see if a problem is caused by a specific node version
      fail-fast: false
      matrix:
        node-version: ['16.x', '18.x', '20.x']

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build y-mongodb-provider
        run: |
          npm ci
          npm run build

      # I install the dependencies here and overwrite y-mongodb-provider with the just built version to use the latest version
      - name: Create ESM server
        run: |
          cd example-servers/esm
          npm ci
          cp -r $GITHUB_WORKSPACE/src $GITHUB_WORKSPACE/example-servers/esm/node_modules/y-mongodb-provider/
          cp -r $GITHUB_WORKSPACE/dist $GITHUB_WORKSPACE/example-servers/esm/node_modules/y-mongodb-provider/
          cp $GITHUB_WORKSPACE/package.json $GITHUB_WORKSPACE/example-servers/esm/node_modules/y-mongodb-provider/
          npm run build

      # Afterwards I run it and kill it after 5 seconds to get the console output
      - name: Create and run ESM server
        id: scripts
        env:
          PORT: 3000
          MONGO_URL: 'mongodb://127.0.0.1:27017/todos' # doesnt really matter for this test since we dont need to connect
        run: |
          cd example-servers/esm
          npm run start &>> output.txt & SERVER_PID=$!
          sleep 5
          kill $SERVER_PID
          cat output.txt

      # We currently only check if the console output contains the "Yjs was already imported" error message
      - name: Check console output
        run: |
          cd example-servers/esm
          CONSOLE_OUTPUT=$(cat output.txt)
          echo "$CONSOLE_OUTPUT"
          if echo "$CONSOLE_OUTPUT" | grep -q "Yjs was already imported"; then
            echo "Error message found in console output"
            exit 1
          else
            echo "No error message found in console output"
          fi
        shell: bash

  # check the cjs build
  commonjs:
    runs-on: ubuntu-latest

    timeout-minutes: 10

    strategy:
      # I want the test to run on all node versions to see if a problem is caused by a specific node version
      fail-fast: false
      matrix:
        node-version: ['16.x', '18.x', '20.x']

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build y-mongodb-provider
        run: |
          npm ci
          npm run build

      # I install the dependencies here and overwrite y-mongodb-provider with the just built version to use the latest version
      - name: Create CJM server
        run: |
          cd example-servers/commonjs
          npm ci
          cp -r $GITHUB_WORKSPACE/src $GITHUB_WORKSPACE/example-servers/commonjs/node_modules/y-mongodb-provider/
          cp -r $GITHUB_WORKSPACE/dist $GITHUB_WORKSPACE/example-servers/commonjs/node_modules/y-mongodb-provider/
          cp $GITHUB_WORKSPACE/package.json $GITHUB_WORKSPACE/example-servers/commonjs/node_modules/y-mongodb-provider/

      # Afterwards I run it and kill it after 5 seconds to get the console output
      - name: Create and run CJM server
        id: scripts
        env:
          PORT: 3000
          MONGO_URL: 'mongodb://127.0.0.1:27017/todos' # doesnt really matter for this test since we dont need to connect
        run: |
          cd example-servers/commonjs
          npm run start &>> output.txt & SERVER_PID=$!
          sleep 5
          kill $SERVER_PID
          cat output.txt

      # We currently only check if the console output contains the "Yjs was already imported" error message
      - name: Check console output
        run: |
          cd example-servers/commonjs
          CONSOLE_OUTPUT=$(cat output.txt)
          echo "$CONSOLE_OUTPUT"
          if echo "$CONSOLE_OUTPUT" | grep -q "Yjs was already imported"; then
            echo "Error message found in console output"
            exit 1
          else
            echo "No error message found in console output"
          fi
        shell: bash

  # check the rollup build
  rollup:
    runs-on: ubuntu-latest

    timeout-minutes: 10

    strategy:
      # I want the test to run on all node versions to see if a problem is caused by a specific node version
      fail-fast: false
      matrix:
        node-version: ['16.x', '18.x', '20.x']

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build y-mongodb-provider
        run: |
          npm ci
          npm run build

      # I install the dependencies here and overwrite y-mongodb-provider with the just built version to use the latest version
      - name: Create rollup server
        run: |
          cd example-servers/rollup
          npm ci
          cp -r $GITHUB_WORKSPACE/src $GITHUB_WORKSPACE/example-servers/rollup/node_modules/y-mongodb-provider/
          cp -r $GITHUB_WORKSPACE/dist $GITHUB_WORKSPACE/example-servers/rollup/node_modules/y-mongodb-provider/
          cp $GITHUB_WORKSPACE/package.json $GITHUB_WORKSPACE/example-servers/rollup/node_modules/y-mongodb-provider/
          npm run build

      # Afterwards I run it and kill it after 5 seconds to get the console output
      - name: Create and run rollup server
        id: scripts
        env:
          PORT: 3000
          MONGO_URL: 'mongodb://127.0.0.1:27017/todos' # doesnt really matter for this test since we dont need to connect
        run: |
          cd example-servers/rollup
          npm run start &>> output.txt & SERVER_PID=$!
          sleep 5
          kill $SERVER_PID
          cat output.txt

      # We currently only check if the console output contains the "Yjs was already imported" error message
      - name: Check console output
        run: |
          cd example-servers/rollup
          CONSOLE_OUTPUT=$(cat output.txt)
          echo "$CONSOLE_OUTPUT"
          if echo "$CONSOLE_OUTPUT" | grep -q "Yjs was already imported"; then
            echo "Error message found in console output"
            exit 1
          else
            echo "No error message found in console output"
          fi
        shell: bash
