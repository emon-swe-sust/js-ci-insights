name: Build
on: push
permissions: write-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            x86_64-pc-windows-msvc,
            i686-pc-windows-msvc,
            apple-darwin,
            x86_64-unknown-linux-gnu,
          ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Install jq
        run: sudo apt-get install -y jq
      - id: getname
        run: |
          echo "NAME=$(cat info.json | jq '.id' | tr -d '"')" >> "$GITHUB_ENV"
          echo "ICON=$(cat info.json | jq '.icon' | tr -d '"')" >> "$GITHUB_ENV"
      - name: Move
        if: matrix.target == 'x86_64-pc-windows-msvc' || matrix.target == 'i686-pc-windows-msvc'
        run: |
          mv ${{ matrix.target }}/RapidOcrOnnx.exe ./RapidOcrOnnx.exe
      - name: Move
        if: matrix.target != 'x86_64-pc-windows-msvc' && matrix.target != 'i686-pc-windows-msvc'
        run: |
          mv ${{ matrix.target }}/RapidOcrOnnx ./RapidOcrOnnx
          chmod +x ./RapidOcrOnnx
      - uses: vimtor/action-zip@v1
        if: matrix.target == 'x86_64-pc-windows-msvc' || matrix.target == 'i686-pc-windows-msvc'
        with:
          files: info.json ${{ env.ICON  }} main.js PPOCR RapidOcrOnnx.exe
          dest: ${{ env.NAME }}.potext
      - uses: vimtor/action-zip@v1
        if: matrix.target != 'x86_64-pc-windows-msvc' && matrix.target != 'i686-pc-windows-msvc'
        with:
          files: info.json ${{ env.ICON }} main.js PPOCR RapidOcrOnnx
          dest: ${{ env.NAME }}.potext
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: "*.potext"
          if-no-files-found: error
      - name: Wrap
        if: startsWith(github.ref, 'refs/tags')
        uses: vimtor/action-zip@v1
        with:
          files: ${{ env.NAME }}.potext
          dest: ${{ matrix.target }}.zip
      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ matrix.target }}.zip
