name: Node CI

on: [push, pull_request]

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.set-matrix.outputs.requireds }}
      nonlatest: ${{ steps.set-matrix.outputs.optionals }}
    steps:
      - uses: ljharb/actions/node/matrix@main
        id: set-matrix
        with:
          versionsAsRoot: true
          type: majors
          preset: ">= 0.8"

  latest:
    needs: [matrix]
    name: 'latest majors'
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        node-version: ${{ fromJson(needs.matrix.outputs.latest) }}
        exclude:
          - os: windows-latest
            node-version: '3'
          - os: windows-latest
            node-version: '2'
          - os: windows-latest
            node-version: '1'
          - os: windows-latest
            node-version: '0.8'

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3

    - uses: ljharb/actions/node/install@main
      name: 'nvm install ${{ matrix.node-version }} && npm install'
      with:
        node-version: ${{ matrix.node-version }}
        skip-ls-check: true
      if: matrix.os != 'windows-latest'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
      if: matrix.os == 'windows-latest'

    - run: npm install
      env:
        NPM_CONFIG_STRICT_SSL: false
      if: matrix.os == 'windows-latest'

    - run: npm run tests-only
    - uses: codecov/codecov-action@v3

  nonlatest:
    needs: [matrix, latest]
    name: 'non-latest majors'
    continue-on-error: true
    if: ${{ needs.matrix.outputs.nonlatest != '[]' && (!github.head_ref || !startsWith(github.head_ref, 'renovate')) }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        node-version: ${{ fromJson(needs.matrix.outputs.nonlatest) }}
        exclude:
          - os: windows-latest
            node-version: '0.8'

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3

    - uses: ljharb/actions/node/install@main
      name: 'nvm install ${{ matrix.node-version }} && npm install'
      with:
        node-version: ${{ matrix.node-version }}
        skip-ls-check: true
      if: matrix.os != 'windows-latest'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
      if: matrix.os == 'windows-latest'

    - run: npm install
      env:
        NPM_CONFIG_STRICT_SSL: false
      if: matrix.os == 'windows-latest'

    - run: npm run tests-only
    - uses: codecov/codecov-action@v3

  node:
    name: 'node majors, windows/mac'
    needs: [latest, nonlatest]
    runs-on: ubuntu-latest
    steps:
      - run: 'echo tests completed'
