name: CD

on:
  push:
    branches:
      - 'master'

jobs:
  Docker-Build-Frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: pollbuddy/frontend
          tags: |
            type=ref,event=branch
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:PollBuddy-Server/frontend"
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  Docker-Build-Backend:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: pollbuddy/backend
          tags: |
            type=ref,event=branch
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:PollBuddy-Server/backend"
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  Docker-Build-Reporting:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: pollbuddy/reporting
          tags: |
            type=ref,event=branch
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:PollBuddy-Server/reporting/grafana"
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  Master-Deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Initialize SSH
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.POLLBUDDY_CICD_SERVER_KNOWNHOST }}" >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.POLLBUDDY_CICD_SERVER_USER_KEY }}"

      - name: Remote Test
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -p ${{ secrets.POLLBUDDY_CICD_SERVER_PORT }} ${{ secrets.POLLBUDDY_CICD_SERVER_USER_NAME }}@${{ secrets.POLLBUDDY_CICD_SERVER_URL }} cat test
        id: remote_test

      - name: Remote Update
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -p ${{ secrets.POLLBUDDY_CICD_SERVER_PORT }} ${{ secrets.POLLBUDDY_CICD_SERVER_USER_NAME }}@${{ secrets.POLLBUDDY_CICD_SERVER_URL }} "cd ./CI-CD && git pull"
        id: remote_update

      - name: Remote Deploy
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -p ${{ secrets.POLLBUDDY_CICD_SERVER_PORT }} ${{ secrets.POLLBUDDY_CICD_SERVER_USER_NAME }}@${{ secrets.POLLBUDDY_CICD_SERVER_URL }} "cd ./CI-CD && bash ./deployMaster.sh"
        id: remote_deploy

      - name: Kubernetes Deploy
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://dev.pollbuddy.app/api/deployment/new'
          method: 'POST'
          timeout: 60000 # 60 second timeout, should only need about 10s
          contentType: application/x-www-form-urlencoded
          data: key=${{ secrets.CICD_KEY }}
      - name: Show Response
        run: echo ${{ steps.Deploy.outputs.response }}