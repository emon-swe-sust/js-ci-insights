name: TEST - expo-update mode

on:
  workflow_call:
    inputs:
      env:
        description: 'Environment (dev, test, prod)'
        required: true
        type: string
      config:
        description: 'Config (default-devices, all-devices, many-stories)'
        required: false
        default: 'default-devices'
        type: string
      project:
        description: 'Project (expo-update, device-testing, many-stories)'
        required: true
        type: string
      with_builds:
        description: 'With builds'
        required: false
        default: false
        type: boolean
      arch:
        description: 'Architecture to use (old, new)'
        required: false
        default: 'old'
        type: string

jobs:
  run_sherlo_expo_update:
    name: Run Sherlo in expo-update mode
    environment: ${{ inputs.env }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.18.0'

      - name: Add env specific dependencies
        run: ./scripts/switch-env.sh ${{ inputs.env }}
        env:
          PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}

      - name: Install dependencies
        run: yarn && cd packages/cli && yarn build

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install project dependencies
        working-directory: testing/expo-storybook-8
        run: yarn

      - name: Trigger EAS update and capture manifest URLs
        working-directory: testing/expo-storybook-8
        run: |
          eas update --channel 'development' --message 'Expo Update' --json --non-interactive

      - name: Download builds if needed
        if: inputs.with_builds == true
        run: ./scripts/downloadBuilds.sh --project expo-storybook-8 --profile development-${{ inputs.arch }} --branch ${{ github.head_ref || github.ref_name }}
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Run sherlo expo-update (with native builds) with CLI
        if: inputs.with_builds == true
        working-directory: testing/expo-storybook-8
        run: |
          yarn sherlo expo-update \
            --config ../../configs/${{ inputs.config }}.json \
            --android builds/development-${{ inputs.arch }}/android.apk \
            --ios builds/development-${{ inputs.arch }}/ios.tar.gz \
            --branch development \
            --token ${{ (inputs.project == 'expo-update' && inputs.arch == 'old' && secrets.SHERLO_EXPO_UPDATE_OLD_TOKEN) || 
                        (inputs.project == 'expo-update' && inputs.arch == 'new' && secrets.SHERLO_EXPO_UPDATE_NEW_TOKEN) || 
                        (inputs.project == 'many-stories' && secrets.SHERLO_MANY_STORIES_TOKEN) || 
                        (inputs.project == 'device-testing' && secrets.SHERLO_ALL_DEVICES_TOKEN) }}

      - name: Run sherlo expo-update (without native builds) with CLI
        if: inputs.with_builds == false
        working-directory: testing/expo-storybook-8
        run: |
          yarn sherlo expo-update \
            --config ../../configs/${{ inputs.config }}.json \
            --branch development \
            --token ${{ (inputs.project == 'expo-update' && inputs.arch == 'old' && secrets.SHERLO_EXPO_UPDATE_OLD_TOKEN) || 
                        (inputs.project == 'expo-update' && inputs.arch == 'new' && secrets.SHERLO_EXPO_UPDATE_NEW_TOKEN) || 
                        (inputs.project == 'many-stories' && secrets.SHERLO_MANY_STORIES_TOKEN) || 
                        (inputs.project == 'device-testing' && secrets.SHERLO_ALL_DEVICES_TOKEN) }}
