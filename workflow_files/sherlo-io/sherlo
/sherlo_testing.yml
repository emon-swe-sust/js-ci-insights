name: 'Sherlo Testing'

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - 'dev'
          - 'test'
          - 'prod'
      arch:
        description: 'Architecture'
        required: true
        default: 'old & new'
        type: choice
        options:
          - 'old & new'
          - 'old'
          - 'new'
      device_testing:
        description: 'expo-update (sb8) / all-devices'
        required: false
        default: false
        type: boolean
      many_stories:
        description: 'expo-update (sb8) / many-stories'
        required: false
        default: false
        type: boolean
      expo_local_builds:
        description: 'local-builds (expo sb8) / default'
        required: false
        default: false
        type: boolean
      rn_local_builds:
        description: 'local-builds (rn sb7) / default'
        required: false
        default: false
        type: boolean
      expo_cloud:
        description: 'expo-cloud (sb8) / default'
        required: false
        default: false
        type: boolean
      expo_update_with_builds:
        description: 'expo-update (sb8) / default (with builds)'
        required: false
        default: false
        type: boolean
      expo_update:
        description: 'expo-update (sb8) / default'
        required: false
        default: false
        type: boolean
  schedule:
    - cron: '0 5 * * *' # 5 AM UTC every day (6 AM in Poland)

jobs:
  check_if_monday:
    runs-on: ubuntu-latest
    outputs:
      is_monday: ${{ steps.check_day.outputs.is_monday }}
    steps:
      - id: check_day
        run: |
          if [[ $(date +%u) == 1 ]]; then
            echo "is_monday=true" >> $GITHUB_OUTPUT
          else
            echo "is_monday=false" >> $GITHUB_OUTPUT
          fi

  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      arch-matrix: ${{ steps.set-matrix.outputs.arch-matrix }}
    steps:
      - id: set-matrix
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo "arch-matrix=[\"old\"]" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.arch }}" == "old & new" ]; then
            echo "arch-matrix=[\"old\", \"new\"]" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.arch }}" == "old" ]; then
            echo "arch-matrix=[\"old\"]" >> $GITHUB_OUTPUT
          else
            echo "arch-matrix=[\"new\"]" >> $GITHUB_OUTPUT
          fi

  device_testing:
    needs: check_if_monday
    uses: ./.github/workflows/expo-update.yml
    if: ${{ ((github.event_name == 'schedule' && needs.check_if_monday.outputs.is_monday == 'true') || github.event.inputs.device_testing == 'true') && always() && !failure() && !cancelled() }}
    name: Device Testing
    secrets: inherit
    with:
      env: ${{ github.event_name == 'schedule' && 'dev' || inputs.env }}
      config: 'all-devices'
      project: 'device-testing'
      with_builds: true
      arch: 'old'

  many_stories:
    needs: check_if_monday
    uses: ./.github/workflows/expo-update.yml
    if: ${{ ((github.event_name == 'schedule' && needs.check_if_monday.outputs.is_monday == 'true') || github.event.inputs.many_stories == 'true') && always() && !failure() && !cancelled() }}
    name: Many Stories
    secrets: inherit
    with:
      env: ${{ github.event_name == 'schedule' && 'dev' || inputs.env }}
      config: 'many-stories'
      with_builds: true
      project: 'many-stories'
      arch: 'old'

  expo_local_builds:
    needs: [check_if_monday, setup-matrix]
    uses: ./.github/workflows/local-builds.yml
    if: ${{ ((github.event_name == 'schedule' && needs.check_if_monday.outputs.is_monday == 'true') || github.event.inputs.expo_local_builds == 'true') && always() && !failure() && !cancelled() }}
    strategy:
      matrix:
        arch: ${{ fromJson(needs.setup-matrix.outputs.arch-matrix) }}
    name: local-builds (Expo - ${{ matrix.arch }} Arch)
    secrets: inherit
    with:
      env: ${{ github.event_name == 'schedule' && 'dev' || github.event.inputs.env }}
      project: 'expo-storybook-8'
      arch: ${{ matrix.arch }}

  rn_local_builds:
    needs: [check_if_monday, setup-matrix]
    uses: ./.github/workflows/local-builds.yml
    if: ${{ ((github.event_name == 'schedule' && needs.check_if_monday.outputs.is_monday == 'true') || github.event.inputs.rn_local_builds == 'true') && always() && !failure() && !cancelled() }}
    strategy:
      matrix:
        arch: ${{ fromJson(needs.setup-matrix.outputs.arch-matrix) }}
    name: local-builds (React Native - ${{ matrix.arch }} Arch)
    secrets: inherit
    with:
      env: ${{ github.event_name == 'schedule' && 'dev' || github.event.inputs.env }}
      project: 'rn-storybook-7'
      arch: ${{ matrix.arch }}

  expo_cloud:
    needs: [check_if_monday, setup-matrix]
    uses: ./.github/workflows/expo-cloud.yml
    if: ${{ ((github.event_name == 'schedule' && needs.check_if_monday.outputs.is_monday == 'true') || github.event.inputs.expo_cloud == 'true') && always() && !failure() && !cancelled() }}
    strategy:
      matrix:
        arch: ${{ fromJson(needs.setup-matrix.outputs.arch-matrix) }}
    name: expo-cloud-builds (${{ matrix.arch }} Arch)
    secrets: inherit
    with:
      env: ${{ github.event_name == 'schedule' && 'dev' || github.event.inputs.env }}
      arch: ${{ matrix.arch }}

  expo_update_with_builds:
    needs: [check_if_monday, setup-matrix]
    uses: ./.github/workflows/expo-update.yml
    if: ${{ ((github.event_name == 'schedule' && needs.check_if_monday.outputs.is_monday == 'true') || github.event.inputs.expo_update_with_builds == 'true') && always() && !failure() && !cancelled() }}
    strategy:
      matrix:
        arch: ${{ fromJson(needs.setup-matrix.outputs.arch-matrix) }}
    name: expo-update (with native builds - ${{ matrix.arch }} Arch)
    secrets: inherit
    with:
      env: ${{ github.event_name == 'schedule' && 'dev' || github.event.inputs.env }}
      with_builds: true
      project: 'expo-update'
      arch: ${{ matrix.arch }}

  expo_update:
    needs: [check_if_monday, setup-matrix]
    uses: ./.github/workflows/expo-update.yml
    if: ${{ ((github.event_name == 'schedule' && (needs.check_if_monday.outputs.is_monday == 'true' || contains(needs.setup-matrix.outputs.arch-matrix, 'new'))) || github.event.inputs.expo_update == 'true') && always() && !failure() && !cancelled() }}
    strategy:
      matrix:
        arch: ${{ fromJson(needs.setup-matrix.outputs.arch-matrix) }}
    name: expo-update (without native builds - ${{ matrix.arch }} Arch)
    secrets: inherit
    with:
      env: ${{ github.event_name == 'schedule' && 'dev' || github.event.inputs.env }}
      with_builds: false
      project: 'expo-update'
      arch: ${{ matrix.arch }}
