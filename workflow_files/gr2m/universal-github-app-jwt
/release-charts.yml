name: Release Charts

on:
  push:
    branches:
      - master

env:
  tag_prefix: v

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global --add safe.directory /charts

      - name: Generate default static install
        run: |
          helm template passmower ./ -n passmower > passmower.yaml

      - name: Get chart verison
        id: chart_version
        run: |
          echo "CHART_VERSION=$(cat Chart.yaml | awk -F"[ ',]+" '/version:/{print $2}')" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: tag_exists
        run: |
          TAG_EXISTS=true
          if ! [ $(git tag -l "${{ env.tag_prefix }}${{ steps.chart_version.outputs.CHART_VERSION }}") ]; then
              TAG_EXISTS=false
          fi
          echo TAG_EXISTS=$TAG_EXISTS >> $GITHUB_OUTPUT

      - name: Tag release
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.chart_version.outputs.CHART_VERSION }}
          tag_prefix: ${{ env.tag_prefix }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          prerelease: ${{ contains(steps.chart_version.outputs.CHART_VERSION, '-') }}
          artifacts: "passmower.yaml"
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Publish Helm chart to the ghcr.io registry
        uses: appany/helm-oci-chart-releaser@v0.4.2
        with:
          name: passmower
          repository: passmower/charts
          tag: ${{ steps.chart_version.outputs.CHART_VERSION }}
          path: ./
          registry: ghcr.io
          registry_username: ${{ secrets.GHCR_USERNAME }}
          registry_password: ${{ secrets.GHCR_TOKEN }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'