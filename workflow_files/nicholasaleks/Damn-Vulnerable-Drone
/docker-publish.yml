name: Build & Push Docker images (multi-arch)

on:
  push:
    branches: [ "master" ]
    tags:    [ "v*.*.*" ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # ───── full images ─────
          - name: damn-vulnerable-drone-companion-computer
            context: .
            file: companion-computer/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-flight-controller
            context: .
            file: flight-controller/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-ground-control-station
            context: .
            file: ground-control-station/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-simulator
            context: .
            file: simulator/Dockerfile
            platforms: linux/amd64,linux/arm64

          # Push to separate "-lite" repos
          - name: damn-vulnerable-drone-companion-computer-lite
            context: .
            file: companion-computer/lite/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-flight-controller-lite
            context: .
            file: flight-controller/lite/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-ground-control-station-lite
            context: .
            file: ground-control-station/lite/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-simulator-lite
            context: .
            file: simulator/lite/Dockerfile
            platforms: linux/amd64,linux/arm64

    steps:
      # ──────────────────────────────────────────────────────────────
      #  checkout & toolchain
      # ──────────────────────────────────────────────────────────────
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up QEMU (cross-arch emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx builder
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ──────────────────────────────────────────────────────────────
      #  build-time metadata  → gives us :master / :vX.Y.Z / :sha-xxx
      # ──────────────────────────────────────────────────────────────
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ matrix.name }}

      # ──────────────────────────────────────────────────────────────
      #  build & push the multi-arch image (all tags from meta)
      # ──────────────────────────────────────────────────────────────
      - name: Build & push ${{ matrix.name }}
        id: build
        uses: docker/build-push-action@v5
        with:
          context:    ${{ matrix.context }}
          file:       ${{ matrix.file }}
          platforms:  ${{ matrix.platforms }}
          push:       true
          tags:       ${{ steps.meta.outputs.tags }}
          labels:     ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ matrix.name }}:buildcache
          cache-to:   type=registry,ref=${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ matrix.name }}:buildcache,mode=max

      # ──────────────────────────────────────────────────────────────
      #  add / refresh the :latest tag **only for master branch**
      #    (re-uses the manifest we just pushed – no extra build time)
      # ──────────────────────────────────────────────────────────────
      - name: Update latest tag
        if: github.ref == 'refs/heads/master'
        run: |
          set -eux
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ matrix.name }}:latest \
            ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ matrix.name }}:master
