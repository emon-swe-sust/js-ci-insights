name: Wrappers Tests

on:
  pull_request:
    paths-ignore:
      - 'apps/**/*.md'
  push:
    branches: [25_2]

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_TOKEN }}
  NX_SKIP_NX_CACHE: ${{ (github.event_name != 'pull_request' || contains( github.event.pull_request.labels.*.name, 'skip-cache')) && 'true' || 'false' }}
  BUILD_TEST_INTERNAL_PACKAGE: true

jobs:
  build:
    runs-on: devextreme-shr2
    timeout-minutes: 15

    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: |
            ${{ env.STORE_PATH }}
            .nx/cache
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store

      - name: Install dependencies
        run: pnpm install

      - name: Build devextreme package
        env:
          BUILD_TEST_INTERNAL_PACKAGE: true
        working-directory: ./packages/devextreme
        run: pnpx nx build

  check-regenerate:
    runs-on: devextreme-shr2
    timeout-minutes: 10

    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: |
            ${{ env.STORE_PATH }}
            .nx/cache
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store

      - name: Install dependencies
        run: pnpm install

      - name: Generate wrappers
        run: pnpm run regenerate-all

      - name: Check generated code
        shell: bash
        run: |
          git add . -N
          changes=$(git diff --name-status HEAD -- packages/devextreme-angular/src packages/devextreme-react/src packages/devextreme-vue/src)
          if [ -n "$changes" ]; then
            echo "Generated code is outdated. The following files have uncommitted changes:"
            echo "$changes";
            echo "To update generated code, use "pnpm run regenerate-all" and commit changes."
            exit 1
          fi

  test:
    runs-on: devextreme-shr2
    timeout-minutes: 20
    needs: build
    strategy:
      fail-fast: false
      matrix:
        framework: [angular, react, vue]

    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: |
            ${{ env.STORE_PATH }}
            .nx/cache
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store

      - name: Install dependencies
        run: pnpm install

      - name: Download Browser
        if: matrix.framework == 'angular'
        run: pnpx puppeteer browsers install chrome@130.0.6723.69

      - name: Test ${{ matrix.framework }}
        run: pnpx nx test devextreme-${{ matrix.framework }}

      - name: Pack ${{ matrix.framework }}
        run: pnpx nx pack devextreme-${{ matrix.framework }}
