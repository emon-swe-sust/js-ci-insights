name: Integration

# on:
#  push:
#    branches:
#      - main
#  pull_request:

jobs:
  test:
    name: AD4M cli
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Fetch source code
      uses: actions/checkout@v2

    - name: git init submodule
      run: git submodule init && git submodule update

    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        override: true
        toolchain: 1.77.0

    - name: Use Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install protobuf & cmake
      run: brew install protobuf cmake

    - name: Cache cargo
      id: cache-cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo
    - run: rustup target add wasm32-unknown-unknown

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - uses: pnpm/action-setup@v4

    - name: Install Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.32.4

    - name: Install GO
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install HC
      run: cargo install holochain_cli --version 0.3.0-beta-dev.27 || echo "hc already installed"

    - name: pnpm Install
      run: pnpm install --no-frozen-lockfile

    - name: pnpm Build (builds entire workspace)
      run: pnpm build

    - name: Run binaries test script
      run: ./tests/bats/bin/bats tests/binaries.bats || cat ~/Library/Logs/DiagnosticReports/*

    - name: Run integration test script
      run: ./tests/bats/bin/bats tests/integration.bats || cat ~/Library/Logs/DiagnosticReports/*
