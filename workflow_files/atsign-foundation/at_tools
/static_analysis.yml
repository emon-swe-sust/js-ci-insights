name: static_analysis
# Runs the workflow on the below events:
# 1. on pull request raised to trunk branch.
# 2. on push event to trunk branch.
on:
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - at_cli
          - at_cram
          - at_dump_atKeys
          - at_hive_recovery
          - at_pkam
          - at_repl
          - at_ve_doctor

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c # v1.7.1
        with:
          sdk: stable

      - name: Install dependencies and analyze in ${{ matrix.package }}
        working-directory: packages/${{ matrix.package }}
        run: |
          dart pub get
          dart analyze

      # Runs osv-scanner to find any vulnerable Dart dependencies
      # It needs to look at pubspec.lock files, which is why it's
      # placed here, as the `dart pub get` above will create them
      - name: Run osv-scanner
        uses: google/osv-scanner-action/osv-scanner-action@90b209d0ea55cea1da9fc0c4e65782cc6acb6e2e # v2.2.2
        with:
          scan-args: |-
            --lockfile=./packages/${{ matrix.package }}/pubspec.lock
