name: Electron app builder

on:
  workflow_dispatch:
    inputs:
      node_version:
        description: 'Node version'
        type: string
        default: 22.x

jobs:
  build-mac-intel:
    runs-on: macos-13
    name: Build on MacOS
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ github.event.inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ github.event.inputs.node_version }}

      - name: Configure mac certificate
        env:
          MACOS_CERTIFICATE: ${{ secrets.PROD_MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.PROD_MACOS_CERTIFICATE_PWD }}
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
          MACOS_CI_KEYCHAIN_PWD: ${{ secrets.PROD_MACOS_CI_KEYCHAIN_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PWD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_CI_KEYCHAIN_PWD" build.keychain

      - name: Confiure notarytool API key
        env:
          MACOS_NOTARYTOOL_API_KEY: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY }}
          MACOS_NOTARYTOOL_API_KEY_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          echo "$MACOS_NOTARYTOOL_API_KEY" > ~/.appstoreconnect/private_keys/AuthKey_${MACOS_NOTARYTOOL_API_KEY_ID}.p8

      - run: npm ci

      - name: Package electron
        env:
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
          MACOS_NOTARYTOOL_API_KEY_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}
          MACOS_NOTARYTOOL_API_KEY_ISSUER_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ISSUER_ID }}
          MACOS_NOTARIZATION_TEAM_ID: ${{ secrets.PROD_MACOS_NOTARIZATION_TEAM_ID }}
          MACOS_NOTARYTOOL_API_KEY: ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}.p8
        run: |
          npm run package-electron
          npm run make-electron

      - run: find out | grep -v webpack

      - uses: actions/upload-artifact@v4
        with:
          name: schemio-darwin
          path: out/make/zip/darwin/x64/schemio-darwin-x64-*.zip

  build-mac:
    runs-on: macOS-latest
    name: Build on MacOS
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ github.event.inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ github.event.inputs.node_version }}

      - name: Configure mac certificate
        env:
          MACOS_CERTIFICATE: ${{ secrets.PROD_MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.PROD_MACOS_CERTIFICATE_PWD }}
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
          MACOS_CI_KEYCHAIN_PWD: ${{ secrets.PROD_MACOS_CI_KEYCHAIN_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PWD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_CI_KEYCHAIN_PWD" build.keychain

      - name: Confiure notarytool API key
        env:
          MACOS_NOTARYTOOL_API_KEY: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY }}
          MACOS_NOTARYTOOL_API_KEY_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          echo "$MACOS_NOTARYTOOL_API_KEY" > ~/.appstoreconnect/private_keys/AuthKey_${MACOS_NOTARYTOOL_API_KEY_ID}.p8

      - run: npm ci

      - name: Package electron
        env:
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
          MACOS_NOTARYTOOL_API_KEY_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}
          MACOS_NOTARYTOOL_API_KEY_ISSUER_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ISSUER_ID }}
          MACOS_NOTARIZATION_TEAM_ID: ${{ secrets.PROD_MACOS_NOTARIZATION_TEAM_ID }}
          MACOS_NOTARYTOOL_API_KEY: ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}.p8
        run: |
          npm run package-electron
          npm run make-electron

      - uses: actions/upload-artifact@v4
        with:
          name: schemio-darwin-arm64
          path: ./out/make/zip/darwin/arm64/schemio-darwin-arm64-*.zip


  build-linux:
    runs-on: ubuntu-latest
    name: Build on Linux
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ github.event.inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ github.event.inputs.node_version }}
      - run: npm ci
      - run: npm run package-electron
      - run: npm run make-electron
      - uses: actions/upload-artifact@v4
        with:
          name: schemio-electron-linux-rpm
          path: out/make/rpm/x64/schemio-*-1.x86_64.rpm
      - uses: actions/upload-artifact@v4
        with:
          name: schemio-electron-linux-deb
          path: out/make/deb/x64/schemio_*_amd64.deb
      - run: find out | grep -v .webpack/renderer/assets

  build-win:
    name: Build Windows app
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ github.event.inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ github.event.inputs.node_version }}
      - run: npm ci
      - run: npm run package-electron
      - run: npm run make-electron
      - uses: actions/upload-artifact@v4
        with:
          name: schemio-electron-win-setup
          path: out/make/squirrel.windows/x64/schemio-* Setup.exe
      - run: npm install -g tree-cli
      - run: cd out && tree -l 8
