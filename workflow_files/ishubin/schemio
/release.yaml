name: Release

on:
  workflow_dispatch:
    inputs:
      schemio_version:
        description: 'Schemio version'
        type: string
        default: '0.1.1'
      node_version:
        description: 'Node version'
        type: string
        default: 22.x

jobs:
  release:
    name: Build and release
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: git fetch --all --tags

      - name: Use Node.js ${{ inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - run: npm ci

      - run: ./scripts/ci/release-build.sh ${{ inputs.schemio_version }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.schemio_version }}
          fail_on_unmatched_files: true
          files: |
            dist/release/schemio-${{ inputs.schemio_version }}.zip
            dist/release/schemio-static-${{ inputs.schemio_version }}.zip

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            binshu/schemio:latest
            binshu/schemio:${{ inputs.schemio_version }}


  build-mac-x64:
    needs: release
    runs-on: macos-13
    name: Build on MacOS
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ inputs.schemio_version }}
      - name: Use Node.js ${{ inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - name: Configure mac certificate
        env:
          MACOS_CERTIFICATE: ${{ secrets.PROD_MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.PROD_MACOS_CERTIFICATE_PWD }}
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
          MACOS_CI_KEYCHAIN_PWD: ${{ secrets.PROD_MACOS_CI_KEYCHAIN_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PWD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_CI_KEYCHAIN_PWD" build.keychain

      - name: Confiure notarytool API key
        env:
          MACOS_NOTARYTOOL_API_KEY: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY }}
          MACOS_NOTARYTOOL_API_KEY_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          echo "$MACOS_NOTARYTOOL_API_KEY" > ~/.appstoreconnect/private_keys/AuthKey_${MACOS_NOTARYTOOL_API_KEY_ID}.p8

      - run: npm ci

      - name: Package electron
        env:
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
          MACOS_NOTARYTOOL_API_KEY_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}
          MACOS_NOTARYTOOL_API_KEY_ISSUER_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ISSUER_ID }}
          MACOS_NOTARIZATION_TEAM_ID: ${{ secrets.PROD_MACOS_NOTARIZATION_TEAM_ID }}
          MACOS_NOTARYTOOL_API_KEY: ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}.p8
        run: |
          npm run package-electron
          npm run make-electron

      - name: Rename binary
        run: mv ./out/make/zip/darwin/x64/schemio-darwin-x64-${{ inputs.schemio_version }}.zip  schemio-macos-x64-${{ inputs.schemio_version }}.zip

      - name: Upload to release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.schemio_version }}
          fail_on_unmatched_files: true
          files: schemio-macos-x64-${{ inputs.schemio_version }}.zip


  build-mac-arm64:
    needs: release
    runs-on: macOS-latest
    name: Build on MacOS
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ inputs.schemio_version }}
      - name: Use Node.js ${{ inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - name: Configure mac certificate
        env:
          MACOS_CERTIFICATE: ${{ secrets.PROD_MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.PROD_MACOS_CERTIFICATE_PWD }}
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
          MACOS_CI_KEYCHAIN_PWD: ${{ secrets.PROD_MACOS_CI_KEYCHAIN_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PWD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_CI_KEYCHAIN_PWD" build.keychain

      - name: Confiure notarytool API key
        env:
          MACOS_NOTARYTOOL_API_KEY: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY }}
          MACOS_NOTARYTOOL_API_KEY_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          echo "$MACOS_NOTARYTOOL_API_KEY" > ~/.appstoreconnect/private_keys/AuthKey_${MACOS_NOTARYTOOL_API_KEY_ID}.p8

      - run: npm ci

      - name: Package electron
        env:
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
          MACOS_NOTARYTOOL_API_KEY_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}
          MACOS_NOTARYTOOL_API_KEY_ISSUER_ID: ${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ISSUER_ID }}
          MACOS_NOTARIZATION_TEAM_ID: ${{ secrets.PROD_MACOS_NOTARIZATION_TEAM_ID }}
          MACOS_NOTARYTOOL_API_KEY: ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.PROD_MACOS_NOTARYTOOL_API_KEY_ID }}.p8
        run: |
          npm run package-electron
          npm run make-electron

      - name: Rename binary
        run: mv ./out/make/zip/darwin/arm64/schemio-darwin-arm64-${{ inputs.schemio_version }}.zip  schemio-macos-arm64-${{ inputs.schemio_version }}.zip

      - name: Upload to release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.schemio_version }}
          fail_on_unmatched_files: true
          files: schemio-macos-arm64-${{ inputs.schemio_version }}.zip



  build-linux:
    needs: release
    runs-on: ubuntu-latest
    name: Build on Linux
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ inputs.schemio_version }}
      - name: Use Node.js ${{ inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}
      - run: npm ci
      - run: npm run package-electron
      - run: npm run make-electron
      - uses: actions/upload-artifact@v4
        with:
          name: schemio-electron-linux-rpm
          path: out/make/rpm/x64/schemio-${{ inputs.schemio_version }}-1.x86_64.rpm
      - run: find out | grep -v .webpack/renderer/assets
      - name: Upload to release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.schemio_version }}
          fail_on_unmatched_files: true
          files: |
            out/make/rpm/x64/schemio-${{ inputs.schemio_version }}-1.x86_64.rpm
            out/make/deb/x64/schemio_${{ inputs.schemio_version }}_amd64.deb

  build-win:
    needs: release
    name: Build Windows app
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ inputs.schemio_version }}
      - name: Use Node.js ${{ inputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}
      - run: npm ci
      - run: npm run package-electron
      - run: npm run make-electron
      - run: npm install -g tree-cli
      - run: cd out && tree -l 8
      - name: Upload to release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.schemio_version }}
          fail_on_unmatched_files: true
          files: out/make/squirrel.windows/x64/schemio-${{ inputs.schemio_version }} Setup.exe



