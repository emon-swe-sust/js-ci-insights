# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - master
      - release/6.0.x
  pull_request:
    branches:
      - master
      - release/6.0.x

permissions: write-all

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5.0.0
    - name: Setup Chrome and ChromeDriver
      uses: browser-actions/setup-chrome@v2
      with:
        chrome-version: stable
        install-chromedriver: true
    - name: Set up cache
      uses: actions/cache@v4.2.4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up Java
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: corretto
        cache: maven
        server-id: struts2-jquery.snapshots
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
    - name: Print Java version
      run: java -version
    - name: Print Maven version
      run: mvn -version
    - name: Print Chrome version
      run: google-chrome --version
    - name: Print ChromeDriver version
      run: chromedriver --version
    - name: Print OS details
      run: uname -a
    - name: Test outbound access
      run: curl -I https://code.jquery.com/jquery-3.7.1.min.js
    - name: Build & Install
      run: |
        echo "üî® Building remaining modules..."
        mvn -B -V -DskipITs clean install
    - name: Run Integration Tests
      run: |
        echo "üß™ Running integration tests with command line flags..."
        
        # Check current configuration
        echo "üìã Current web.xml:"
        if [ -f src/main/webapp/WEB-INF/web.xml ]; then
        cat src/main/webapp/WEB-INF/web.xml
        else
        echo "‚ùå No web.xml found!"
        fi
        
        echo ""
        echo "üìã Jetty Maven plugin config:"
        grep -A 15 -B 5 "jetty-maven-plugin" pom.xml || echo "No jetty plugin config found"

        
        # Clean up Chrome processes
        pkill -f chrome || true
        pkill -f chromedriver || true
        
        mvn -pl struts2-jquery-integration-tests \
        -Dmaven.javadoc.skip=true \
        -Dmaven.source.skip=true \
        -Djetty.scan=0 \
        -P ci-chrome \
        -Dfailsafe.webdriver.name=ChromeDriver \
        verify || {
        
          echo "‚ùå Integration tests failed"
        
          # Enhanced diagnostics
          echo "üîç Maven execution diagnostics:"
        
          # Check what Maven actually tried to do
          echo "üìã Last Maven execution log:"
          # The error log should be in the output above
        
          # Check if Jetty started
          if curl -s -o /dev/null http://localhost:8080; then
            echo "‚úÖ Jetty is running"
            echo "üîç Testing static resources:"
            for file in "/static/js/base/version.min.js" "/static/js/plugins/jquery.subscribe.min.js"; do
              HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost:8080$file")
              echo "  $file: HTTP $HTTP_CODE"
            done
          else
            echo "‚ùå Jetty is not running"
          fi
        
          # Clean up and exit
          pkill -f jetty || true
          pkill -f chrome || true
          exit 1
        }
        
        echo "‚úÖ Integration tests completed successfully!"
        pkill -f chrome || true
    - name: Deploy SNAPSHOT
      if: github.ref == 'refs/heads/release/5.0.x' || github.ref == 'refs/heads/release/6.0.x'
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      run: mvn -B -V -DskipTests=true deploy
