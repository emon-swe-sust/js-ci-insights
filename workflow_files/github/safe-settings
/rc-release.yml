# Simple workflow for deploying static content to GitHub Pages
name: RC Release 

on:
  pull_request:
    types: [labeled]

permissions: write-all

# Allow one concurrent deployment
concurrency:
  group: "rcrelease"
  cancel-in-progress: true

jobs:
  rcrelease:
    name: release
    runs-on: ubuntu-latest
    # if: ${{ github.event.issue.pull_request && github.event.comment.body == '/release'}}
    if: contains(github.event.pull_request.labels.*.name, 'stage')
    outputs:
      release: ${{ steps.rcrelease.outputs.release }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 16.x
        cache: npm
    - run: npm ci
    - run: npm run build --if-present
#    - run: npm test -- -u   
    - name: Tag a rc release 
      if: ${{ !github.event.pull_request.head.repo.fork }}
      id: rcrelease
      uses: actionsdesk/semver@82aa4310e4e21c59cd0020007a4278e733e81dcb
      with:
        prerelease: withBuildNumber
        prelabel: rc
        commitish: ${{ github.head_ref }}
  
  image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: rcrelease
    permissions:
      contents: read
      packages: write
    
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - run: echo ${{ github.actor }}

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2
      - name: Build and push Docker image
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.rcrelease.outputs.release }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          provenance: false
          sbom: false
  
#   package:
#     needs: [rcrelease]
#     runs-on: ubuntu-latest
#     environment: staging
#     steps:
#     - uses: actions/checkout@v4
#     - name: package to docker
#       uses: ./.github/actions/publish-docker
#       with:
#         docker_username: ${{ secrets.DOCKER_USERNAME }}
#         docker_password: ${{ secrets.DOCKER_PASSWORD }}
#         tag: yadhav/safe-settings:${{needs.rcrelease.outputs.release}}
