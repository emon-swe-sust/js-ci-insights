name: CI
on:
  push:
  workflow_dispatch:
concurrency: ci
jobs:
  main:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Check out commit
      uses: actions/checkout@v3

    - name: Determine Node.js version
      id: nodeJs
      run: echo ::set-output name=version::$(cat .node-version)

    - name: Remove blinx.js version from package-lock.json temporarily to allow better npm cache-matching
      run: |
        sed -i'' '/"name": "blinx\.js",/{n;s/.*/  "version": "",/}' package-lock.json
        head package-lock.json

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ steps.nodeJs.outputs.version }}
        cache: npm

    - name: Install dependencies
      run: npm install

    - name: Lint
      run: npm run lint && npm run format:check

    - name: Execute browser-independent unit tests
      run: npm test

    - name: BrowserStack - Setup
      uses: browserstack/github-actions/setup-env@master
      with:
        username:  ${{ secrets.BROWSERSTACK_USERNAME }}
        access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

    - name: BrowserStack - Start tunnel
      uses: browserstack/github-actions/setup-local@master
      with:
        local-testing: start
        local-identifier: random

    - name: BrowserStack - Execute cross-browser unit tests
      run: npm run e2e

    - name: BrowserStack - Stop tunnel
      uses: browserstack/github-actions/setup-local@master
      with:
        local-testing: stop

    - name: Upload code-coverage
      uses: codecov/codecov-action@v1

    - name: Execute build
      run: npm run build

    - name: Bump version on master
      if: ${{ github.ref == 'refs/heads/master' }}
      id: versionBump
      run: |
        echo ::set-output name=version::$(npm version patch --git-tag-version=false 2>/dev/null | tail -n 1)

    - name: Commit built files on master
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: EndBug/add-and-commit@v8
      with:
        message: ${{ steps.versionBump.outputs.version }}
        tag: ${{ steps.versionBump.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
