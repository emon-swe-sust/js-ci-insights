name: dev
on:
  push:
    tags:
      - '!v*'
      - 'v*-alpha*'
      - 'v*-beta*'
      - 'v*-streamer*'
      - 'v*-rc*'
jobs:
  build-a318:
    runs-on: ubuntu-latest
    env:
      FBW_PRODUCTION_BUILD: 1
      A32NX_INSTRUMENTS_BUILD_WORKERS: 2
      PRE_RELEASE_ID: 64125785
      PRE_RELEASE_TAG: vdev
      ZIP_NAME_A318: lvfr-horizonsim-airbus-a318-ceo-preview.zip
      BUILD_DIR_NAME: dev
      CLOUDFLARE_WORKER_PASSWORD: ${{ secrets.CLOUDFLARE_WORKER_PASSWORD }}
      CDN_BUCKET_DESTINATION: addons/lvfr-a318ceo/stage
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: true
      - name: Set BUILT_DATE_TIME
        run: echo "BUILT_DATE_TIME=$(date -u -Iseconds)" >> $GITHUB_ENV
      - name: Create .env file
        run: |
          echo FBW_PRODUCTION_BUILD=1 >> hsim-a318ceo/.env
          echo CLIENT_ID=\"${{ secrets.NAVIGRAPH_CLIENT_ID }}\" >> hsim-a318ceo/.env
          echo CLIENT_SECRET=\"${{ secrets.NAVIGRAPH_CLIENT_SECRET }}\" >> hsim-a318ceo/.env
          echo SENTRY_DSN=\"${{ secrets.SENTRY_DSN }}\" >> hsim-a318ceo/.env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
          echo LOCALAZY_READ_KEY=${{ secrets.LOCALAZY_READ_KEY }} >> .env
          echo VITE_BUILD=false >> .env
      - name: Delete old GitHub Pre-Release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: ${{ env.PRE_RELEASE_TAG }}
          assets: "*"
          fail-if-no-assets: false
          fail-if-no-release: false
      - name: Setup Package
        run:  |
          ./scripts/dev-env/run.sh ./scripts/setup.sh --clean
      - name: Copy Sources
        run: |
          ./scripts/dev-env/run.sh ./scripts/copy_a318hs.sh
      - name: Build A318HS Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/build_a318hs.sh --no-tty -j 4
      - name: Build A318HS ZIP files
        run: |
          node ./scripts/fragment_a318ceo.js
          cp ./build-a318ceo/out/build-modules/modules.json ./build-a318ceo/out/lvfr-horizonsim-airbus-a318-ceo/install.json
          node ./scripts/install-source-a318ceo.js
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./build-a318ceo/out/
          zip -r ../../${{ env.BUILD_DIR_NAME }}/${{ env.ZIP_NAME_A318 }} ./lvfr-horizonsim-airbus-a318-ceo/
          cd ../../
      - name: Upload to CloudFlare CDN
        run: |
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a318ceo/out/build-modules
      - name: Upload Release Config to CloudFlare CDN
        run: |
          mkdir -p ./build-a318ceo/out/config
          echo "releases:" >> ./build-a318ceo/out/config/releases.yaml
          echo "  - name: $GITHUB_REF_NAME" >> ./build-a318ceo/out/config/releases.yaml
          echo "    date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> ./build-a318ceo/out/config/releases.yaml
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a318ceo/out/config
  build-a319:
    runs-on: ubuntu-latest
    env:
      FBW_PRODUCTION_BUILD: 1
      A32NX_INSTRUMENTS_BUILD_WORKERS: 2
      PRE_RELEASE_ID: 64125785
      PRE_RELEASE_TAG: vdev
      ZIP_NAME_A319: lvfr-horizonsim-airbus-a319-ceo-preview.zip
      BUILD_DIR_NAME: dev
      CLOUDFLARE_WORKER_PASSWORD: ${{ secrets.CLOUDFLARE_WORKER_PASSWORD }}
      CDN_BUCKET_DESTINATION: addons/lvfr-a319ceo/stage
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: true
      - name: Set BUILT_DATE_TIME
        run: echo "BUILT_DATE_TIME=$(date -u -Iseconds)" >> $GITHUB_ENV
      - name: Create .env file
        run: |
          echo FBW_PRODUCTION_BUILD=1 >> hsim-a319ceo/.env
          echo CLIENT_ID=\"${{ secrets.NAVIGRAPH_CLIENT_ID }}\" >> hsim-a319ceo/.env
          echo CLIENT_SECRET=\"${{ secrets.NAVIGRAPH_CLIENT_SECRET }}\" >> hsim-a319ceo/.env
          echo SENTRY_DSN=\"${{ secrets.SENTRY_DSN }}\" >> hsim-a319ceo/.env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
          echo LOCALAZY_READ_KEY=${{ secrets.LOCALAZY_READ_KEY }} >> .env
          echo VITE_BUILD=false >> .env
      - name: Delete old GitHub Pre-Release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: ${{ env.PRE_RELEASE_TAG }}
          assets: "*"
          fail-if-no-assets: false
          fail-if-no-release: false
      - name: Setup Package
        run:  |
          ./scripts/dev-env/run.sh ./scripts/setup.sh --clean
      - name: Copy Sources
        run: |
          ./scripts/dev-env/run.sh ./scripts/copy_a319hs.sh
      - name: Build A319HS Package
        run: |
            ./scripts/dev-env/run.sh ./scripts/build_a319hs.sh --no-tty -j 4
      - name: Build A319HS ZIP files
        run: |
            node ./scripts/fragment_a319ceo.js
            cp ./build-a319ceo/out/build-modules/modules.json ./build-a319ceo/out/lvfr-horizonsim-airbus-a319-ceo/install.json
            node ./scripts/install-source-a319ceo.js
            mkdir ./${{ env.BUILD_DIR_NAME }}
            cd ./build-a319ceo/out/
            zip -r ../../${{ env.BUILD_DIR_NAME }}/${{ env.ZIP_NAME_A319 }} ./lvfr-horizonsim-airbus-a319-ceo/
            cd ../../
      - name: Upload to CloudFlare CDN
        run: |
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a319ceo/out/build-modules
      - name: Upload Release Config to CloudFlare CDN
        run: |
          mkdir -p ./build-a319ceo/out/config
          echo "releases:" >> ./build-a319ceo/out/config/releases.yaml
          echo "  - name: $GITHUB_REF_NAME" >> ./build-a319ceo/out/config/releases.yaml
          echo "    date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> ./build-a319ceo/out/config/releases.yaml
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a319ceo/out/config
  build-a320:
    runs-on: ubuntu-latest
    env:
      FBW_PRODUCTION_BUILD: 1
      A32NX_INSTRUMENTS_BUILD_WORKERS: 2
      PRE_RELEASE_ID: 64125785
      PRE_RELEASE_TAG: vdev
      ZIP_NAME_A320: lvfr-horizonsim-airbus-a320-ceo-preview.zip
      BUILD_DIR_NAME: dev
      CLOUDFLARE_WORKER_PASSWORD: ${{ secrets.CLOUDFLARE_WORKER_PASSWORD }}
      CDN_BUCKET_DESTINATION: addons/lvfr-a320ceo/stage
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: true
      - name: Set BUILT_DATE_TIME
        run: echo "BUILT_DATE_TIME=$(date -u -Iseconds)" >> $GITHUB_ENV
      - name: Create .env file
        run: |
          echo FBW_PRODUCTION_BUILD=1 >> hsim-a320ceo/.env
          echo CLIENT_ID=\"${{ secrets.NAVIGRAPH_CLIENT_ID }}\" >> hsim-a320ceo/.env
          echo CLIENT_SECRET=\"${{ secrets.NAVIGRAPH_CLIENT_SECRET }}\" >> hsim-a320ceo/.env
          echo SENTRY_DSN=\"${{ secrets.SENTRY_DSN }}\" >> hsim-a320ceo/.env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
          echo LOCALAZY_READ_KEY=${{ secrets.LOCALAZY_READ_KEY }} >> .env
          echo VITE_BUILD=false >> .env
      - name: Delete old GitHub Pre-Release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: ${{ env.PRE_RELEASE_TAG }}
          assets: "*"
          fail-if-no-assets: false
          fail-if-no-release: false
      - name: Setup Package
        run:  |
          ./scripts/dev-env/run.sh ./scripts/setup.sh --clean
      - name: Copy Sources
        run: |
          ./scripts/dev-env/run.sh ./scripts/copy_a320hs.sh
      - name: Build A320HS Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/build_a320hs.sh --no-tty -j 4
      - name: Build A320HS ZIP files
        run: |
          node ./scripts/fragment_a320ceo.js
          cp ./build-a320ceo/out/build-modules/modules.json ./build-a320ceo/out/lvfr-horizonsim-airbus-a320-ceo/install.json
          node ./scripts/install-source-a320ceo.js
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./build-a320ceo/out/
          zip -r ../../${{ env.BUILD_DIR_NAME }}/${{ env.ZIP_NAME_A320 }} ./lvfr-horizonsim-airbus-a320-ceo/
          cd ../../
      - name: Upload to CloudFlare CDN
        run: |
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a320ceo/out/build-modules
      - name: Upload Release Config to CloudFlare CDN
        run: |
          mkdir -p ./build-a320ceo/out/config
          echo "releases:" >> ./build-a320ceo/out/config/releases.yaml
          echo "  - name: $GITHUB_REF_NAME" >> ./build-a320ceo/out/config/releases.yaml
          echo "    date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> ./build-a320ceo/out/config/releases.yaml
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a320ceo/out/config
  build-a321:
    runs-on: ubuntu-latest
    env:
      FBW_PRODUCTION_BUILD: 1
      A32NX_INSTRUMENTS_BUILD_WORKERS: 2
      PRE_RELEASE_ID: 64125785
      PRE_RELEASE_TAG: vdev
      ZIP_NAME_A321: lvfr-horizonsim-airbus-a321-neo-preview.zip
      BUILD_DIR_NAME: dev
      CLOUDFLARE_WORKER_PASSWORD: ${{ secrets.CLOUDFLARE_WORKER_PASSWORD }}
      CDN_BUCKET_DESTINATION: addons/lvfr-a321neo/stage
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: true
      - name: Set BUILT_DATE_TIME
        run: echo "BUILT_DATE_TIME=$(date -u -Iseconds)" >> $GITHUB_ENV
      - name: Create .env file
        run: |
          echo FBW_PRODUCTION_BUILD=1 >> hsim-a321neo/.env
          echo CLIENT_ID=\"${{ secrets.NAVIGRAPH_CLIENT_ID }}\" >> hsim-a321neo/.env
          echo CLIENT_SECRET=\"${{ secrets.NAVIGRAPH_CLIENT_SECRET }}\" >> hsim-a321neo/.env
          echo SENTRY_DSN=\"${{ secrets.SENTRY_DSN }}\" >> hsim-a321neo/.env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
          echo LOCALAZY_READ_KEY=${{ secrets.LOCALAZY_READ_KEY }} >> .env
          echo VITE_BUILD=false >> .env
      - name: Delete old GitHub Pre-Release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: ${{ env.PRE_RELEASE_TAG }}
          assets: "*"
          fail-if-no-assets: false
          fail-if-no-release: false
      - name: Setup Package
        run:  |
          ./scripts/dev-env/run.sh ./scripts/setup.sh --clean
      - name: Copy Sources
        run: |
          ./scripts/dev-env/run.sh ./scripts/copy_a321hs.sh
      - name: Build A21NHS Package
        run: |
            ./scripts/dev-env/run.sh ./scripts/build_a321hs.sh --no-tty -j 4
      - name: Build A21NHS ZIP files
        run: |
          node ./scripts/fragment_a321neo.js
          cp ./build-a321neo/out/build-modules/modules.json ./build-a321neo/out/lvfr-horizonsim-airbus-a321-neo/install.json
          node ./scripts/install-source-a321neo.js
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./build-a321neo/out/
          zip -r ../../${{ env.BUILD_DIR_NAME }}/${{ env.ZIP_NAME_A321 }} ./lvfr-horizonsim-airbus-a321-neo/
          cd ../../
      - name: Upload to CloudFlare CDN
        run: |
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a321neo/out/build-modules
      - name: Upload Release Config to CloudFlare CDN
        run: |
          mkdir -p ./build-a321neo/out/config
          echo "releases:" >> ./build-a321neo/out/config/releases.yaml
          echo "  - name: $GITHUB_REF_NAME" >> ./build-a321neo/out/config/releases.yaml
          echo "    date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> ./build-a321neo/out/config/releases.yaml
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a321neo/out/config
