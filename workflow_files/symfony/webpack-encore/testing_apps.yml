name: Testing in real apps
on: [push, pull_request]

jobs:
  testing_app:
    strategy:
      fail-fast: false
      matrix:
        app:
          - name: npm
            working_directory: test_apps/npm
            script: |
              npm install --ci
              npm add --save-dev ../../webpack-encore.tgz
              npm run encore dev
              npm run encore production

          - name: npm (with Babel)
            working_directory: test_apps/npm-with-babel
            script: |
              npm install --ci
              npm add --save-dev ../../webpack-encore.tgz
              npm run encore dev
              npm run encore production

          - name: npm (with external Babel configuration file)
            working_directory: test_apps/npm-with-external-babel-config
            script: |
              npm install --ci
              npm add --save-dev ../../webpack-encore.tgz
              npm run encore dev
              npm run encore production

          - name: pnpm
            working_directory: test_apps/pnpm
            script: |
              pnpm install --frozen-lockfile
              pnpm add --save-dev ../../webpack-encore.tgz
              pnpm run encore dev
              pnpm run encore production

          - name: pnpm (with Babel)
            working_directory: test_apps/pnpm-with-babel
            script: |
              pnpm install --frozen-lockfile
              pnpm add --save-dev ../../webpack-encore.tgz
              pnpm run encore dev
              pnpm run encore production

          - name: pnpm (with external Babel configuration file)
            working_directory: test_apps/pnpm-with-external-babel-config
            script: |
              pnpm install --frozen-lockfile
              pnpm add --save-dev ../../webpack-encore.tgz
              pnpm run encore dev
              pnpm run encore production

          - name: Yarn Plug'n'Play
            working_directory: test_apps/yarn-pnp
            script: |
              yarn set version 4.3.0
              yarn install --immutable
              yarn add --dev ../../webpack-encore.tgz
              yarn run encore dev
              yarn run encore production

          - name: Yarn Plug'n'Play (with Babel)
            working_directory: test_apps/yarn-pnp-with-babel
            script: |
              yarn set version 4.3.0
              yarn install --immutable
              yarn add --dev ../../webpack-encore.tgz
              yarn run encore dev
              yarn run encore production

          - name: Yarn Plug'n'Play (with external Babel configuration file)
            working_directory: test_apps/yarn-pnp-with-external-babel-config
            script: |
              yarn set version 4.3.0
              yarn install --immutable
              yarn add --dev ../../webpack-encore.tgz
              yarn run encore dev
              yarn run encore production

    name: ${{ matrix.app.name }}
    runs-on: ubuntu-latest
    env:
      # We don't want Puppeteer to automatically download a browser when dependencies are being installed
      PUPPETEER_SKIP_DOWNLOAD: 'true'
      
    steps:
      -   name: Checkout
          uses: actions/checkout@v4

      -   name: Node ${{matrix.node-versions}}
          uses: actions/setup-node@v4
          with:
            node-version: '22'

      -   if: ${{ contains(matrix.app.name, 'pnpm') }}
          name: Install pnpm
          uses: pnpm/action-setup@v4
          with:
            package_json_file: '${{ matrix.app.working_directory }}/package.json'

      -   name: Packing Encore
          run: yarn pack --filename webpack-encore.tgz

      -   name: Running script
          working-directory: ${{ matrix.app.working_directory }}
          run: ${{ matrix.app.script }}
