name: Performance tests

on:
  schedule:
    - cron:  '30 0 * * mon,wed,fri'

defaults:
  run:
    shell: bash

jobs:
  # Test the build
  build:
    # Setup
    runs-on: ubuntu-latest

    # Go
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Env
        shell: bash
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Git ref:    ${{ github.ref }}"
          echo "GH actor:   ${{ github.actor }}"
          echo "SHA:        ${{ github.sha }}"
          VER=`node --version`; echo "Node ver:   $VER"
          VER=`npm --version`; echo "npm ver:    $VER"

      - name: Use latest tag
        run: |
          git fetch --tags
          git checkout $(git describe --tags `git rev-list --tags --max-count=1`)

      - name: Install dependencies
        run: npm install

      - name: Hydrate
        run: npx arc hydrate

      - name: Test
        run: npm test

      - name: Production deploy
        run: npx arc deploy --production
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Production metrics
        run: npm run bench
        env:
          CI: true
          ARC_ENV: production
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Publish aws-lite.org
        uses: actions/github-script@v7
        with:
          # Workflow dispatches can't use GITHUB_TOKEN, so this uses a PAT from ArchitectCI
          github-token: ${{ secrets.ARC_TOKEN }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: 'aws-lite',
              repo: 'aws-lite.org',
              workflow_id: 'build.yml',
              ref: 'main',
            })

      - name: Notify
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "deploy build"
          color: 0x222222
          username: GitHub Actions
